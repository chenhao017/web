/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 55.0, "minX": 0.0, "maxY": 1311.0, "series": [{"data": [[0.0, 352.0], [0.1, 360.0], [0.2, 363.0], [0.3, 363.0], [0.4, 365.0], [0.5, 367.0], [0.6, 375.0], [0.7, 376.0], [0.8, 389.0], [0.9, 389.0], [1.0, 392.0], [1.1, 395.0], [1.2, 395.0], [1.3, 403.0], [1.4, 410.0], [1.5, 427.0], [1.6, 431.0], [1.7, 444.0], [1.8, 446.0], [1.9, 450.0], [2.0, 456.0], [2.1, 466.0], [2.2, 471.0], [2.3, 474.0], [2.4, 487.0], [2.5, 492.0], [2.6, 495.0], [2.7, 503.0], [2.8, 506.0], [2.9, 528.0], [3.0, 533.0], [3.1, 538.0], [3.2, 538.0], [3.3, 540.0], [3.4, 540.0], [3.5, 541.0], [3.6, 551.0], [3.7, 552.0], [3.8, 556.0], [3.9, 576.0], [4.0, 578.0], [4.1, 582.0], [4.2, 583.0], [4.3, 596.0], [4.4, 598.0], [4.5, 598.0], [4.6, 598.0], [4.7, 600.0], [4.8, 602.0], [4.9, 606.0], [5.0, 607.0], [5.1, 607.0], [5.2, 608.0], [5.3, 611.0], [5.4, 614.0], [5.5, 614.0], [5.6, 614.0], [5.7, 616.0], [5.8, 617.0], [5.9, 617.0], [6.0, 620.0], [6.1, 620.0], [6.2, 621.0], [6.3, 622.0], [6.4, 622.0], [6.5, 625.0], [6.6, 625.0], [6.7, 626.0], [6.8, 627.0], [6.9, 627.0], [7.0, 627.0], [7.1, 630.0], [7.2, 631.0], [7.3, 632.0], [7.4, 632.0], [7.5, 634.0], [7.6, 634.0], [7.7, 635.0], [7.8, 635.0], [7.9, 636.0], [8.0, 637.0], [8.1, 638.0], [8.2, 639.0], [8.3, 641.0], [8.4, 641.0], [8.5, 642.0], [8.6, 643.0], [8.7, 643.0], [8.8, 644.0], [8.9, 644.0], [9.0, 644.0], [9.1, 644.0], [9.2, 645.0], [9.3, 645.0], [9.4, 645.0], [9.5, 646.0], [9.6, 646.0], [9.7, 647.0], [9.8, 647.0], [9.9, 647.0], [10.0, 647.0], [10.1, 647.0], [10.2, 647.0], [10.3, 648.0], [10.4, 648.0], [10.5, 648.0], [10.6, 648.0], [10.7, 648.0], [10.8, 648.0], [10.9, 649.0], [11.0, 649.0], [11.1, 649.0], [11.2, 649.0], [11.3, 650.0], [11.4, 650.0], [11.5, 650.0], [11.6, 650.0], [11.7, 650.0], [11.8, 651.0], [11.9, 651.0], [12.0, 652.0], [12.1, 653.0], [12.2, 653.0], [12.3, 653.0], [12.4, 653.0], [12.5, 653.0], [12.6, 654.0], [12.7, 654.0], [12.8, 654.0], [12.9, 654.0], [13.0, 654.0], [13.1, 654.0], [13.2, 654.0], [13.3, 655.0], [13.4, 655.0], [13.5, 655.0], [13.6, 655.0], [13.7, 655.0], [13.8, 656.0], [13.9, 656.0], [14.0, 656.0], [14.1, 656.0], [14.2, 657.0], [14.3, 658.0], [14.4, 658.0], [14.5, 658.0], [14.6, 659.0], [14.7, 660.0], [14.8, 660.0], [14.9, 660.0], [15.0, 660.0], [15.1, 661.0], [15.2, 661.0], [15.3, 662.0], [15.4, 662.0], [15.5, 663.0], [15.6, 663.0], [15.7, 663.0], [15.8, 664.0], [15.9, 664.0], [16.0, 664.0], [16.1, 665.0], [16.2, 665.0], [16.3, 665.0], [16.4, 666.0], [16.5, 666.0], [16.6, 667.0], [16.7, 667.0], [16.8, 667.0], [16.9, 667.0], [17.0, 667.0], [17.1, 668.0], [17.2, 670.0], [17.3, 670.0], [17.4, 670.0], [17.5, 671.0], [17.6, 674.0], [17.7, 674.0], [17.8, 675.0], [17.9, 675.0], [18.0, 675.0], [18.1, 676.0], [18.2, 677.0], [18.3, 677.0], [18.4, 678.0], [18.5, 679.0], [18.6, 682.0], [18.7, 682.0], [18.8, 682.0], [18.9, 682.0], [19.0, 687.0], [19.1, 688.0], [19.2, 688.0], [19.3, 692.0], [19.4, 692.0], [19.5, 693.0], [19.6, 695.0], [19.7, 695.0], [19.8, 696.0], [19.9, 702.0], [20.0, 704.0], [20.1, 705.0], [20.2, 706.0], [20.3, 706.0], [20.4, 707.0], [20.5, 707.0], [20.6, 712.0], [20.7, 712.0], [20.8, 715.0], [20.9, 715.0], [21.0, 717.0], [21.1, 717.0], [21.2, 718.0], [21.3, 719.0], [21.4, 719.0], [21.5, 720.0], [21.6, 722.0], [21.7, 724.0], [21.8, 724.0], [21.9, 727.0], [22.0, 729.0], [22.1, 730.0], [22.2, 730.0], [22.3, 732.0], [22.4, 733.0], [22.5, 735.0], [22.6, 736.0], [22.7, 738.0], [22.8, 739.0], [22.9, 740.0], [23.0, 741.0], [23.1, 741.0], [23.2, 744.0], [23.3, 745.0], [23.4, 745.0], [23.5, 748.0], [23.6, 749.0], [23.7, 751.0], [23.8, 752.0], [23.9, 752.0], [24.0, 755.0], [24.1, 756.0], [24.2, 757.0], [24.3, 758.0], [24.4, 758.0], [24.5, 759.0], [24.6, 760.0], [24.7, 760.0], [24.8, 760.0], [24.9, 761.0], [25.0, 761.0], [25.1, 761.0], [25.2, 762.0], [25.3, 762.0], [25.4, 762.0], [25.5, 763.0], [25.6, 764.0], [25.7, 764.0], [25.8, 764.0], [25.9, 764.0], [26.0, 765.0], [26.1, 765.0], [26.2, 765.0], [26.3, 765.0], [26.4, 766.0], [26.5, 766.0], [26.6, 766.0], [26.7, 766.0], [26.8, 767.0], [26.9, 767.0], [27.0, 767.0], [27.1, 768.0], [27.2, 768.0], [27.3, 768.0], [27.4, 768.0], [27.5, 768.0], [27.6, 768.0], [27.7, 769.0], [27.8, 771.0], [27.9, 771.0], [28.0, 771.0], [28.1, 771.0], [28.2, 771.0], [28.3, 771.0], [28.4, 772.0], [28.5, 772.0], [28.6, 772.0], [28.7, 772.0], [28.8, 773.0], [28.9, 773.0], [29.0, 773.0], [29.1, 774.0], [29.2, 774.0], [29.3, 775.0], [29.4, 778.0], [29.5, 778.0], [29.6, 779.0], [29.7, 779.0], [29.8, 780.0], [29.9, 780.0], [30.0, 780.0], [30.1, 780.0], [30.2, 780.0], [30.3, 781.0], [30.4, 781.0], [30.5, 781.0], [30.6, 781.0], [30.7, 781.0], [30.8, 781.0], [30.9, 781.0], [31.0, 782.0], [31.1, 782.0], [31.2, 782.0], [31.3, 783.0], [31.4, 784.0], [31.5, 784.0], [31.6, 785.0], [31.7, 785.0], [31.8, 785.0], [31.9, 786.0], [32.0, 786.0], [32.1, 787.0], [32.2, 788.0], [32.3, 788.0], [32.4, 788.0], [32.5, 789.0], [32.6, 789.0], [32.7, 789.0], [32.8, 790.0], [32.9, 791.0], [33.0, 791.0], [33.1, 791.0], [33.2, 791.0], [33.3, 792.0], [33.4, 793.0], [33.5, 793.0], [33.6, 794.0], [33.7, 794.0], [33.8, 795.0], [33.9, 797.0], [34.0, 798.0], [34.1, 798.0], [34.2, 799.0], [34.3, 799.0], [34.4, 799.0], [34.5, 801.0], [34.6, 801.0], [34.7, 803.0], [34.8, 803.0], [34.9, 803.0], [35.0, 804.0], [35.1, 804.0], [35.2, 806.0], [35.3, 806.0], [35.4, 807.0], [35.5, 809.0], [35.6, 813.0], [35.7, 816.0], [35.8, 817.0], [35.9, 817.0], [36.0, 819.0], [36.1, 819.0], [36.2, 820.0], [36.3, 820.0], [36.4, 822.0], [36.5, 822.0], [36.6, 823.0], [36.7, 823.0], [36.8, 823.0], [36.9, 825.0], [37.0, 825.0], [37.1, 825.0], [37.2, 826.0], [37.3, 826.0], [37.4, 826.0], [37.5, 826.0], [37.6, 827.0], [37.7, 827.0], [37.8, 827.0], [37.9, 828.0], [38.0, 828.0], [38.1, 828.0], [38.2, 831.0], [38.3, 832.0], [38.4, 832.0], [38.5, 834.0], [38.6, 836.0], [38.7, 836.0], [38.8, 836.0], [38.9, 837.0], [39.0, 837.0], [39.1, 838.0], [39.2, 839.0], [39.3, 840.0], [39.4, 841.0], [39.5, 841.0], [39.6, 842.0], [39.7, 842.0], [39.8, 842.0], [39.9, 842.0], [40.0, 843.0], [40.1, 844.0], [40.2, 844.0], [40.3, 847.0], [40.4, 849.0], [40.5, 850.0], [40.6, 851.0], [40.7, 851.0], [40.8, 851.0], [40.9, 853.0], [41.0, 853.0], [41.1, 854.0], [41.2, 856.0], [41.3, 856.0], [41.4, 856.0], [41.5, 856.0], [41.6, 857.0], [41.7, 859.0], [41.8, 859.0], [41.9, 859.0], [42.0, 860.0], [42.1, 861.0], [42.2, 861.0], [42.3, 863.0], [42.4, 863.0], [42.5, 864.0], [42.6, 864.0], [42.7, 864.0], [42.8, 866.0], [42.9, 867.0], [43.0, 867.0], [43.1, 868.0], [43.2, 870.0], [43.3, 871.0], [43.4, 872.0], [43.5, 872.0], [43.6, 875.0], [43.7, 876.0], [43.8, 878.0], [43.9, 878.0], [44.0, 878.0], [44.1, 879.0], [44.2, 879.0], [44.3, 879.0], [44.4, 879.0], [44.5, 880.0], [44.6, 881.0], [44.7, 882.0], [44.8, 882.0], [44.9, 882.0], [45.0, 882.0], [45.1, 883.0], [45.2, 883.0], [45.3, 883.0], [45.4, 884.0], [45.5, 886.0], [45.6, 888.0], [45.7, 889.0], [45.8, 890.0], [45.9, 890.0], [46.0, 890.0], [46.1, 892.0], [46.2, 893.0], [46.3, 893.0], [46.4, 894.0], [46.5, 894.0], [46.6, 894.0], [46.7, 894.0], [46.8, 895.0], [46.9, 895.0], [47.0, 897.0], [47.1, 899.0], [47.2, 899.0], [47.3, 899.0], [47.4, 900.0], [47.5, 903.0], [47.6, 905.0], [47.7, 905.0], [47.8, 905.0], [47.9, 906.0], [48.0, 906.0], [48.1, 907.0], [48.2, 907.0], [48.3, 907.0], [48.4, 907.0], [48.5, 909.0], [48.6, 910.0], [48.7, 911.0], [48.8, 911.0], [48.9, 913.0], [49.0, 914.0], [49.1, 914.0], [49.2, 914.0], [49.3, 914.0], [49.4, 915.0], [49.5, 915.0], [49.6, 916.0], [49.7, 916.0], [49.8, 916.0], [49.9, 917.0], [50.0, 918.0], [50.1, 918.0], [50.2, 918.0], [50.3, 919.0], [50.4, 919.0], [50.5, 920.0], [50.6, 920.0], [50.7, 921.0], [50.8, 921.0], [50.9, 923.0], [51.0, 923.0], [51.1, 924.0], [51.2, 925.0], [51.3, 925.0], [51.4, 925.0], [51.5, 925.0], [51.6, 926.0], [51.7, 926.0], [51.8, 926.0], [51.9, 927.0], [52.0, 928.0], [52.1, 929.0], [52.2, 930.0], [52.3, 930.0], [52.4, 930.0], [52.5, 930.0], [52.6, 931.0], [52.7, 931.0], [52.8, 931.0], [52.9, 932.0], [53.0, 932.0], [53.1, 932.0], [53.2, 932.0], [53.3, 934.0], [53.4, 934.0], [53.5, 935.0], [53.6, 936.0], [53.7, 936.0], [53.8, 937.0], [53.9, 937.0], [54.0, 938.0], [54.1, 938.0], [54.2, 938.0], [54.3, 939.0], [54.4, 939.0], [54.5, 939.0], [54.6, 941.0], [54.7, 941.0], [54.8, 943.0], [54.9, 943.0], [55.0, 943.0], [55.1, 944.0], [55.2, 945.0], [55.3, 945.0], [55.4, 945.0], [55.5, 945.0], [55.6, 946.0], [55.7, 947.0], [55.8, 949.0], [55.9, 949.0], [56.0, 949.0], [56.1, 950.0], [56.2, 951.0], [56.3, 951.0], [56.4, 951.0], [56.5, 952.0], [56.6, 952.0], [56.7, 953.0], [56.8, 956.0], [56.9, 957.0], [57.0, 957.0], [57.1, 957.0], [57.2, 958.0], [57.3, 958.0], [57.4, 959.0], [57.5, 960.0], [57.6, 961.0], [57.7, 961.0], [57.8, 961.0], [57.9, 961.0], [58.0, 962.0], [58.1, 962.0], [58.2, 963.0], [58.3, 964.0], [58.4, 964.0], [58.5, 965.0], [58.6, 966.0], [58.7, 966.0], [58.8, 967.0], [58.9, 967.0], [59.0, 967.0], [59.1, 969.0], [59.2, 970.0], [59.3, 970.0], [59.4, 971.0], [59.5, 971.0], [59.6, 973.0], [59.7, 973.0], [59.8, 973.0], [59.9, 974.0], [60.0, 975.0], [60.1, 978.0], [60.2, 981.0], [60.3, 981.0], [60.4, 983.0], [60.5, 983.0], [60.6, 984.0], [60.7, 986.0], [60.8, 988.0], [60.9, 990.0], [61.0, 990.0], [61.1, 991.0], [61.2, 992.0], [61.3, 992.0], [61.4, 993.0], [61.5, 993.0], [61.6, 994.0], [61.7, 996.0], [61.8, 997.0], [61.9, 999.0], [62.0, 1001.0], [62.1, 1002.0], [62.2, 1002.0], [62.3, 1005.0], [62.4, 1005.0], [62.5, 1005.0], [62.6, 1006.0], [62.7, 1006.0], [62.8, 1009.0], [62.9, 1009.0], [63.0, 1009.0], [63.1, 1010.0], [63.2, 1011.0], [63.3, 1012.0], [63.4, 1012.0], [63.5, 1012.0], [63.6, 1012.0], [63.7, 1013.0], [63.8, 1013.0], [63.9, 1014.0], [64.0, 1014.0], [64.1, 1014.0], [64.2, 1015.0], [64.3, 1016.0], [64.4, 1016.0], [64.5, 1016.0], [64.6, 1017.0], [64.7, 1018.0], [64.8, 1019.0], [64.9, 1019.0], [65.0, 1021.0], [65.1, 1021.0], [65.2, 1022.0], [65.3, 1022.0], [65.4, 1023.0], [65.5, 1023.0], [65.6, 1023.0], [65.7, 1023.0], [65.8, 1024.0], [65.9, 1025.0], [66.0, 1027.0], [66.1, 1027.0], [66.2, 1029.0], [66.3, 1029.0], [66.4, 1030.0], [66.5, 1030.0], [66.6, 1032.0], [66.7, 1032.0], [66.8, 1032.0], [66.9, 1032.0], [67.0, 1033.0], [67.1, 1033.0], [67.2, 1034.0], [67.3, 1035.0], [67.4, 1036.0], [67.5, 1036.0], [67.6, 1036.0], [67.7, 1037.0], [67.8, 1037.0], [67.9, 1038.0], [68.0, 1038.0], [68.1, 1039.0], [68.2, 1039.0], [68.3, 1040.0], [68.4, 1040.0], [68.5, 1040.0], [68.6, 1040.0], [68.7, 1040.0], [68.8, 1041.0], [68.9, 1041.0], [69.0, 1041.0], [69.1, 1043.0], [69.2, 1043.0], [69.3, 1043.0], [69.4, 1043.0], [69.5, 1044.0], [69.6, 1044.0], [69.7, 1044.0], [69.8, 1044.0], [69.9, 1046.0], [70.0, 1046.0], [70.1, 1046.0], [70.2, 1048.0], [70.3, 1049.0], [70.4, 1050.0], [70.5, 1050.0], [70.6, 1050.0], [70.7, 1050.0], [70.8, 1051.0], [70.9, 1051.0], [71.0, 1052.0], [71.1, 1052.0], [71.2, 1054.0], [71.3, 1054.0], [71.4, 1055.0], [71.5, 1056.0], [71.6, 1057.0], [71.7, 1057.0], [71.8, 1057.0], [71.9, 1058.0], [72.0, 1060.0], [72.1, 1060.0], [72.2, 1060.0], [72.3, 1062.0], [72.4, 1062.0], [72.5, 1062.0], [72.6, 1062.0], [72.7, 1062.0], [72.8, 1063.0], [72.9, 1063.0], [73.0, 1063.0], [73.1, 1063.0], [73.2, 1065.0], [73.3, 1066.0], [73.4, 1068.0], [73.5, 1068.0], [73.6, 1069.0], [73.7, 1069.0], [73.8, 1070.0], [73.9, 1070.0], [74.0, 1070.0], [74.1, 1073.0], [74.2, 1075.0], [74.3, 1075.0], [74.4, 1077.0], [74.5, 1077.0], [74.6, 1080.0], [74.7, 1080.0], [74.8, 1080.0], [74.9, 1081.0], [75.0, 1084.0], [75.1, 1084.0], [75.2, 1085.0], [75.3, 1086.0], [75.4, 1087.0], [75.5, 1087.0], [75.6, 1087.0], [75.7, 1090.0], [75.8, 1090.0], [75.9, 1090.0], [76.0, 1091.0], [76.1, 1091.0], [76.2, 1093.0], [76.3, 1093.0], [76.4, 1093.0], [76.5, 1094.0], [76.6, 1095.0], [76.7, 1098.0], [76.8, 1098.0], [76.9, 1098.0], [77.0, 1099.0], [77.1, 1099.0], [77.2, 1100.0], [77.3, 1100.0], [77.4, 1101.0], [77.5, 1101.0], [77.6, 1101.0], [77.7, 1102.0], [77.8, 1103.0], [77.9, 1106.0], [78.0, 1106.0], [78.1, 1106.0], [78.2, 1106.0], [78.3, 1107.0], [78.4, 1108.0], [78.5, 1108.0], [78.6, 1108.0], [78.7, 1109.0], [78.8, 1109.0], [78.9, 1109.0], [79.0, 1109.0], [79.1, 1110.0], [79.2, 1110.0], [79.3, 1110.0], [79.4, 1111.0], [79.5, 1111.0], [79.6, 1111.0], [79.7, 1112.0], [79.8, 1112.0], [79.9, 1112.0], [80.0, 1113.0], [80.1, 1113.0], [80.2, 1113.0], [80.3, 1114.0], [80.4, 1115.0], [80.5, 1115.0], [80.6, 1115.0], [80.7, 1115.0], [80.8, 1115.0], [80.9, 1115.0], [81.0, 1116.0], [81.1, 1116.0], [81.2, 1117.0], [81.3, 1117.0], [81.4, 1118.0], [81.5, 1118.0], [81.6, 1119.0], [81.7, 1120.0], [81.8, 1120.0], [81.9, 1120.0], [82.0, 1120.0], [82.1, 1121.0], [82.2, 1121.0], [82.3, 1122.0], [82.4, 1123.0], [82.5, 1123.0], [82.6, 1123.0], [82.7, 1124.0], [82.8, 1124.0], [82.9, 1125.0], [83.0, 1125.0], [83.1, 1126.0], [83.2, 1126.0], [83.3, 1126.0], [83.4, 1126.0], [83.5, 1126.0], [83.6, 1127.0], [83.7, 1128.0], [83.8, 1128.0], [83.9, 1128.0], [84.0, 1129.0], [84.1, 1129.0], [84.2, 1129.0], [84.3, 1131.0], [84.4, 1131.0], [84.5, 1131.0], [84.6, 1132.0], [84.7, 1132.0], [84.8, 1133.0], [84.9, 1133.0], [85.0, 1133.0], [85.1, 1134.0], [85.2, 1134.0], [85.3, 1134.0], [85.4, 1135.0], [85.5, 1135.0], [85.6, 1136.0], [85.7, 1136.0], [85.8, 1136.0], [85.9, 1137.0], [86.0, 1137.0], [86.1, 1137.0], [86.2, 1137.0], [86.3, 1138.0], [86.4, 1138.0], [86.5, 1138.0], [86.6, 1138.0], [86.7, 1138.0], [86.8, 1139.0], [86.9, 1139.0], [87.0, 1139.0], [87.1, 1140.0], [87.2, 1141.0], [87.3, 1141.0], [87.4, 1142.0], [87.5, 1142.0], [87.6, 1143.0], [87.7, 1143.0], [87.8, 1143.0], [87.9, 1144.0], [88.0, 1144.0], [88.1, 1144.0], [88.2, 1146.0], [88.3, 1146.0], [88.4, 1146.0], [88.5, 1148.0], [88.6, 1148.0], [88.7, 1148.0], [88.8, 1148.0], [88.9, 1148.0], [89.0, 1149.0], [89.1, 1150.0], [89.2, 1150.0], [89.3, 1150.0], [89.4, 1150.0], [89.5, 1151.0], [89.6, 1151.0], [89.7, 1151.0], [89.8, 1152.0], [89.9, 1152.0], [90.0, 1153.0], [90.1, 1153.0], [90.2, 1154.0], [90.3, 1154.0], [90.4, 1155.0], [90.5, 1156.0], [90.6, 1156.0], [90.7, 1157.0], [90.8, 1157.0], [90.9, 1158.0], [91.0, 1158.0], [91.1, 1158.0], [91.2, 1158.0], [91.3, 1158.0], [91.4, 1158.0], [91.5, 1159.0], [91.6, 1159.0], [91.7, 1160.0], [91.8, 1160.0], [91.9, 1161.0], [92.0, 1162.0], [92.1, 1162.0], [92.2, 1162.0], [92.3, 1164.0], [92.4, 1164.0], [92.5, 1164.0], [92.6, 1164.0], [92.7, 1165.0], [92.8, 1165.0], [92.9, 1165.0], [93.0, 1165.0], [93.1, 1165.0], [93.2, 1165.0], [93.3, 1166.0], [93.4, 1166.0], [93.5, 1166.0], [93.6, 1166.0], [93.7, 1166.0], [93.8, 1166.0], [93.9, 1167.0], [94.0, 1167.0], [94.1, 1168.0], [94.2, 1168.0], [94.3, 1171.0], [94.4, 1172.0], [94.5, 1172.0], [94.6, 1172.0], [94.7, 1172.0], [94.8, 1174.0], [94.9, 1174.0], [95.0, 1174.0], [95.1, 1174.0], [95.2, 1175.0], [95.3, 1175.0], [95.4, 1176.0], [95.5, 1177.0], [95.6, 1177.0], [95.7, 1178.0], [95.8, 1179.0], [95.9, 1179.0], [96.0, 1180.0], [96.1, 1180.0], [96.2, 1182.0], [96.3, 1183.0], [96.4, 1183.0], [96.5, 1184.0], [96.6, 1184.0], [96.7, 1185.0], [96.8, 1186.0], [96.9, 1187.0], [97.0, 1187.0], [97.1, 1188.0], [97.2, 1189.0], [97.3, 1189.0], [97.4, 1189.0], [97.5, 1190.0], [97.6, 1190.0], [97.7, 1192.0], [97.8, 1192.0], [97.9, 1192.0], [98.0, 1192.0], [98.1, 1193.0], [98.2, 1193.0], [98.3, 1194.0], [98.4, 1196.0], [98.5, 1197.0], [98.6, 1198.0], [98.7, 1198.0], [98.8, 1199.0], [98.9, 1199.0], [99.0, 1203.0], [99.1, 1204.0], [99.2, 1204.0], [99.3, 1206.0], [99.4, 1206.0], [99.5, 1207.0], [99.6, 1216.0], [99.7, 1229.0], [99.8, 1246.0], [99.9, 1248.0], [100.0, 1311.0]], "isOverall": false, "label": "抢购下单", "isController": false}, {"data": [[0.0, 69.0], [0.1, 69.0], [0.2, 71.0], [0.3, 71.0], [0.4, 71.0], [0.5, 71.0], [0.6, 71.0], [0.7, 71.0], [0.8, 72.0], [0.9, 72.0], [1.0, 72.0], [1.1, 72.0], [1.2, 72.0], [1.3, 72.0], [1.4, 72.0], [1.5, 73.0], [1.6, 73.0], [1.7, 74.0], [1.8, 74.0], [1.9, 74.0], [2.0, 74.0], [2.1, 75.0], [2.2, 75.0], [2.3, 75.0], [2.4, 75.0], [2.5, 75.0], [2.6, 75.0], [2.7, 75.0], [2.8, 75.0], [2.9, 75.0], [3.0, 75.0], [3.1, 75.0], [3.2, 76.0], [3.3, 76.0], [3.4, 76.0], [3.5, 76.0], [3.6, 76.0], [3.7, 76.0], [3.8, 76.0], [3.9, 76.0], [4.0, 76.0], [4.1, 76.0], [4.2, 76.0], [4.3, 76.0], [4.4, 77.0], [4.5, 77.0], [4.6, 77.0], [4.7, 77.0], [4.8, 77.0], [4.9, 77.0], [5.0, 77.0], [5.1, 77.0], [5.2, 77.0], [5.3, 77.0], [5.4, 77.0], [5.5, 78.0], [5.6, 78.0], [5.7, 78.0], [5.8, 78.0], [5.9, 78.0], [6.0, 78.0], [6.1, 78.0], [6.2, 78.0], [6.3, 78.0], [6.4, 78.0], [6.5, 78.0], [6.6, 78.0], [6.7, 78.0], [6.8, 78.0], [6.9, 78.0], [7.0, 79.0], [7.1, 79.0], [7.2, 79.0], [7.3, 79.0], [7.4, 79.0], [7.5, 79.0], [7.6, 79.0], [7.7, 79.0], [7.8, 79.0], [7.9, 79.0], [8.0, 79.0], [8.1, 79.0], [8.2, 79.0], [8.3, 79.0], [8.4, 79.0], [8.5, 79.0], [8.6, 79.0], [8.7, 79.0], [8.8, 79.0], [8.9, 79.0], [9.0, 80.0], [9.1, 80.0], [9.2, 80.0], [9.3, 80.0], [9.4, 80.0], [9.5, 80.0], [9.6, 80.0], [9.7, 80.0], [9.8, 80.0], [9.9, 80.0], [10.0, 80.0], [10.1, 80.0], [10.2, 80.0], [10.3, 80.0], [10.4, 80.0], [10.5, 80.0], [10.6, 80.0], [10.7, 80.0], [10.8, 80.0], [10.9, 80.0], [11.0, 80.0], [11.1, 80.0], [11.2, 80.0], [11.3, 80.0], [11.4, 80.0], [11.5, 80.0], [11.6, 81.0], [11.7, 81.0], [11.8, 81.0], [11.9, 81.0], [12.0, 81.0], [12.1, 81.0], [12.2, 81.0], [12.3, 81.0], [12.4, 81.0], [12.5, 81.0], [12.6, 81.0], [12.7, 82.0], [12.8, 82.0], [12.9, 82.0], [13.0, 82.0], [13.1, 82.0], [13.2, 82.0], [13.3, 82.0], [13.4, 82.0], [13.5, 82.0], [13.6, 82.0], [13.7, 82.0], [13.8, 83.0], [13.9, 83.0], [14.0, 83.0], [14.1, 83.0], [14.2, 83.0], [14.3, 83.0], [14.4, 83.0], [14.5, 83.0], [14.6, 83.0], [14.7, 83.0], [14.8, 83.0], [14.9, 83.0], [15.0, 83.0], [15.1, 83.0], [15.2, 83.0], [15.3, 84.0], [15.4, 84.0], [15.5, 84.0], [15.6, 84.0], [15.7, 84.0], [15.8, 84.0], [15.9, 84.0], [16.0, 84.0], [16.1, 84.0], [16.2, 85.0], [16.3, 85.0], [16.4, 85.0], [16.5, 85.0], [16.6, 85.0], [16.7, 85.0], [16.8, 85.0], [16.9, 85.0], [17.0, 85.0], [17.1, 85.0], [17.2, 85.0], [17.3, 86.0], [17.4, 86.0], [17.5, 86.0], [17.6, 86.0], [17.7, 86.0], [17.8, 86.0], [17.9, 86.0], [18.0, 86.0], [18.1, 86.0], [18.2, 86.0], [18.3, 86.0], [18.4, 86.0], [18.5, 86.0], [18.6, 86.0], [18.7, 86.0], [18.8, 86.0], [18.9, 86.0], [19.0, 86.0], [19.1, 86.0], [19.2, 86.0], [19.3, 87.0], [19.4, 87.0], [19.5, 87.0], [19.6, 87.0], [19.7, 87.0], [19.8, 87.0], [19.9, 87.0], [20.0, 87.0], [20.1, 87.0], [20.2, 87.0], [20.3, 87.0], [20.4, 87.0], [20.5, 87.0], [20.6, 87.0], [20.7, 87.0], [20.8, 87.0], [20.9, 87.0], [21.0, 87.0], [21.1, 88.0], [21.2, 88.0], [21.3, 88.0], [21.4, 88.0], [21.5, 88.0], [21.6, 88.0], [21.7, 88.0], [21.8, 88.0], [21.9, 88.0], [22.0, 88.0], [22.1, 88.0], [22.2, 88.0], [22.3, 88.0], [22.4, 89.0], [22.5, 89.0], [22.6, 89.0], [22.7, 89.0], [22.8, 89.0], [22.9, 90.0], [23.0, 90.0], [23.1, 90.0], [23.2, 90.0], [23.3, 90.0], [23.4, 90.0], [23.5, 90.0], [23.6, 90.0], [23.7, 90.0], [23.8, 90.0], [23.9, 90.0], [24.0, 90.0], [24.1, 90.0], [24.2, 91.0], [24.3, 91.0], [24.4, 91.0], [24.5, 91.0], [24.6, 91.0], [24.7, 91.0], [24.8, 91.0], [24.9, 91.0], [25.0, 92.0], [25.1, 92.0], [25.2, 92.0], [25.3, 92.0], [25.4, 92.0], [25.5, 92.0], [25.6, 92.0], [25.7, 92.0], [25.8, 92.0], [25.9, 92.0], [26.0, 92.0], [26.1, 92.0], [26.2, 92.0], [26.3, 92.0], [26.4, 92.0], [26.5, 92.0], [26.6, 92.0], [26.7, 92.0], [26.8, 93.0], [26.9, 93.0], [27.0, 93.0], [27.1, 93.0], [27.2, 93.0], [27.3, 93.0], [27.4, 93.0], [27.5, 94.0], [27.6, 94.0], [27.7, 94.0], [27.8, 94.0], [27.9, 94.0], [28.0, 94.0], [28.1, 94.0], [28.2, 94.0], [28.3, 94.0], [28.4, 94.0], [28.5, 94.0], [28.6, 94.0], [28.7, 94.0], [28.8, 95.0], [28.9, 95.0], [29.0, 95.0], [29.1, 95.0], [29.2, 95.0], [29.3, 95.0], [29.4, 95.0], [29.5, 95.0], [29.6, 95.0], [29.7, 95.0], [29.8, 95.0], [29.9, 95.0], [30.0, 95.0], [30.1, 96.0], [30.2, 96.0], [30.3, 96.0], [30.4, 96.0], [30.5, 96.0], [30.6, 96.0], [30.7, 96.0], [30.8, 96.0], [30.9, 96.0], [31.0, 97.0], [31.1, 97.0], [31.2, 97.0], [31.3, 97.0], [31.4, 97.0], [31.5, 97.0], [31.6, 97.0], [31.7, 97.0], [31.8, 97.0], [31.9, 97.0], [32.0, 97.0], [32.1, 98.0], [32.2, 98.0], [32.3, 98.0], [32.4, 98.0], [32.5, 98.0], [32.6, 98.0], [32.7, 98.0], [32.8, 98.0], [32.9, 98.0], [33.0, 98.0], [33.1, 98.0], [33.2, 98.0], [33.3, 98.0], [33.4, 98.0], [33.5, 98.0], [33.6, 99.0], [33.7, 99.0], [33.8, 99.0], [33.9, 99.0], [34.0, 99.0], [34.1, 99.0], [34.2, 99.0], [34.3, 99.0], [34.4, 99.0], [34.5, 100.0], [34.6, 100.0], [34.7, 100.0], [34.8, 100.0], [34.9, 100.0], [35.0, 100.0], [35.1, 100.0], [35.2, 100.0], [35.3, 100.0], [35.4, 100.0], [35.5, 100.0], [35.6, 100.0], [35.7, 100.0], [35.8, 101.0], [35.9, 101.0], [36.0, 101.0], [36.1, 101.0], [36.2, 101.0], [36.3, 101.0], [36.4, 101.0], [36.5, 101.0], [36.6, 101.0], [36.7, 101.0], [36.8, 101.0], [36.9, 101.0], [37.0, 102.0], [37.1, 102.0], [37.2, 102.0], [37.3, 102.0], [37.4, 102.0], [37.5, 102.0], [37.6, 102.0], [37.7, 102.0], [37.8, 102.0], [37.9, 102.0], [38.0, 103.0], [38.1, 103.0], [38.2, 103.0], [38.3, 103.0], [38.4, 103.0], [38.5, 103.0], [38.6, 103.0], [38.7, 103.0], [38.8, 103.0], [38.9, 103.0], [39.0, 103.0], [39.1, 103.0], [39.2, 104.0], [39.3, 104.0], [39.4, 104.0], [39.5, 104.0], [39.6, 104.0], [39.7, 104.0], [39.8, 104.0], [39.9, 104.0], [40.0, 104.0], [40.1, 104.0], [40.2, 105.0], [40.3, 105.0], [40.4, 105.0], [40.5, 105.0], [40.6, 105.0], [40.7, 105.0], [40.8, 105.0], [40.9, 106.0], [41.0, 106.0], [41.1, 107.0], [41.2, 107.0], [41.3, 107.0], [41.4, 107.0], [41.5, 107.0], [41.6, 107.0], [41.7, 107.0], [41.8, 107.0], [41.9, 107.0], [42.0, 107.0], [42.1, 107.0], [42.2, 107.0], [42.3, 107.0], [42.4, 108.0], [42.5, 108.0], [42.6, 108.0], [42.7, 108.0], [42.8, 108.0], [42.9, 109.0], [43.0, 109.0], [43.1, 109.0], [43.2, 109.0], [43.3, 109.0], [43.4, 109.0], [43.5, 109.0], [43.6, 109.0], [43.7, 109.0], [43.8, 109.0], [43.9, 109.0], [44.0, 110.0], [44.1, 110.0], [44.2, 110.0], [44.3, 110.0], [44.4, 110.0], [44.5, 110.0], [44.6, 110.0], [44.7, 110.0], [44.8, 110.0], [44.9, 110.0], [45.0, 110.0], [45.1, 110.0], [45.2, 110.0], [45.3, 110.0], [45.4, 110.0], [45.5, 111.0], [45.6, 111.0], [45.7, 111.0], [45.8, 111.0], [45.9, 111.0], [46.0, 111.0], [46.1, 111.0], [46.2, 111.0], [46.3, 111.0], [46.4, 111.0], [46.5, 111.0], [46.6, 111.0], [46.7, 111.0], [46.8, 111.0], [46.9, 111.0], [47.0, 111.0], [47.1, 112.0], [47.2, 112.0], [47.3, 112.0], [47.4, 112.0], [47.5, 112.0], [47.6, 112.0], [47.7, 112.0], [47.8, 112.0], [47.9, 113.0], [48.0, 113.0], [48.1, 113.0], [48.2, 113.0], [48.3, 113.0], [48.4, 113.0], [48.5, 113.0], [48.6, 113.0], [48.7, 113.0], [48.8, 113.0], [48.9, 113.0], [49.0, 113.0], [49.1, 113.0], [49.2, 113.0], [49.3, 114.0], [49.4, 114.0], [49.5, 114.0], [49.6, 114.0], [49.7, 114.0], [49.8, 114.0], [49.9, 115.0], [50.0, 115.0], [50.1, 115.0], [50.2, 115.0], [50.3, 115.0], [50.4, 116.0], [50.5, 116.0], [50.6, 116.0], [50.7, 116.0], [50.8, 116.0], [50.9, 116.0], [51.0, 116.0], [51.1, 117.0], [51.2, 117.0], [51.3, 117.0], [51.4, 117.0], [51.5, 118.0], [51.6, 118.0], [51.7, 118.0], [51.8, 118.0], [51.9, 119.0], [52.0, 119.0], [52.1, 119.0], [52.2, 119.0], [52.3, 119.0], [52.4, 119.0], [52.5, 119.0], [52.6, 119.0], [52.7, 119.0], [52.8, 120.0], [52.9, 120.0], [53.0, 120.0], [53.1, 120.0], [53.2, 120.0], [53.3, 121.0], [53.4, 121.0], [53.5, 121.0], [53.6, 121.0], [53.7, 121.0], [53.8, 121.0], [53.9, 122.0], [54.0, 122.0], [54.1, 122.0], [54.2, 122.0], [54.3, 122.0], [54.4, 123.0], [54.5, 123.0], [54.6, 123.0], [54.7, 123.0], [54.8, 123.0], [54.9, 123.0], [55.0, 123.0], [55.1, 123.0], [55.2, 124.0], [55.3, 124.0], [55.4, 124.0], [55.5, 124.0], [55.6, 124.0], [55.7, 124.0], [55.8, 124.0], [55.9, 125.0], [56.0, 125.0], [56.1, 125.0], [56.2, 125.0], [56.3, 125.0], [56.4, 125.0], [56.5, 126.0], [56.6, 127.0], [56.7, 127.0], [56.8, 127.0], [56.9, 127.0], [57.0, 127.0], [57.1, 127.0], [57.2, 127.0], [57.3, 127.0], [57.4, 128.0], [57.5, 128.0], [57.6, 128.0], [57.7, 128.0], [57.8, 128.0], [57.9, 128.0], [58.0, 128.0], [58.1, 129.0], [58.2, 129.0], [58.3, 129.0], [58.4, 129.0], [58.5, 129.0], [58.6, 129.0], [58.7, 130.0], [58.8, 131.0], [58.9, 131.0], [59.0, 131.0], [59.1, 131.0], [59.2, 131.0], [59.3, 131.0], [59.4, 132.0], [59.5, 132.0], [59.6, 133.0], [59.7, 133.0], [59.8, 134.0], [59.9, 134.0], [60.0, 134.0], [60.1, 134.0], [60.2, 134.0], [60.3, 136.0], [60.4, 136.0], [60.5, 138.0], [60.6, 138.0], [60.7, 139.0], [60.8, 139.0], [60.9, 139.0], [61.0, 140.0], [61.1, 140.0], [61.2, 142.0], [61.3, 142.0], [61.4, 143.0], [61.5, 143.0], [61.6, 145.0], [61.7, 145.0], [61.8, 146.0], [61.9, 146.0], [62.0, 147.0], [62.1, 148.0], [62.2, 148.0], [62.3, 149.0], [62.4, 149.0], [62.5, 149.0], [62.6, 149.0], [62.7, 152.0], [62.8, 152.0], [62.9, 154.0], [63.0, 154.0], [63.1, 154.0], [63.2, 155.0], [63.3, 155.0], [63.4, 155.0], [63.5, 155.0], [63.6, 155.0], [63.7, 155.0], [63.8, 156.0], [63.9, 156.0], [64.0, 156.0], [64.1, 156.0], [64.2, 157.0], [64.3, 157.0], [64.4, 157.0], [64.5, 158.0], [64.6, 158.0], [64.7, 159.0], [64.8, 159.0], [64.9, 159.0], [65.0, 159.0], [65.1, 159.0], [65.2, 159.0], [65.3, 159.0], [65.4, 160.0], [65.5, 160.0], [65.6, 160.0], [65.7, 160.0], [65.8, 160.0], [65.9, 160.0], [66.0, 160.0], [66.1, 160.0], [66.2, 161.0], [66.3, 161.0], [66.4, 161.0], [66.5, 161.0], [66.6, 161.0], [66.7, 161.0], [66.8, 161.0], [66.9, 161.0], [67.0, 161.0], [67.1, 161.0], [67.2, 161.0], [67.3, 162.0], [67.4, 162.0], [67.5, 162.0], [67.6, 162.0], [67.7, 162.0], [67.8, 163.0], [67.9, 163.0], [68.0, 164.0], [68.1, 164.0], [68.2, 164.0], [68.3, 164.0], [68.4, 164.0], [68.5, 165.0], [68.6, 165.0], [68.7, 165.0], [68.8, 165.0], [68.9, 165.0], [69.0, 165.0], [69.1, 165.0], [69.2, 165.0], [69.3, 165.0], [69.4, 165.0], [69.5, 166.0], [69.6, 166.0], [69.7, 166.0], [69.8, 166.0], [69.9, 166.0], [70.0, 166.0], [70.1, 166.0], [70.2, 167.0], [70.3, 167.0], [70.4, 167.0], [70.5, 167.0], [70.6, 167.0], [70.7, 168.0], [70.8, 168.0], [70.9, 169.0], [71.0, 169.0], [71.1, 169.0], [71.2, 169.0], [71.3, 170.0], [71.4, 170.0], [71.5, 170.0], [71.6, 170.0], [71.7, 170.0], [71.8, 172.0], [71.9, 172.0], [72.0, 172.0], [72.1, 172.0], [72.2, 172.0], [72.3, 172.0], [72.4, 172.0], [72.5, 172.0], [72.6, 172.0], [72.7, 172.0], [72.8, 173.0], [72.9, 173.0], [73.0, 173.0], [73.1, 173.0], [73.2, 173.0], [73.3, 174.0], [73.4, 174.0], [73.5, 175.0], [73.6, 175.0], [73.7, 176.0], [73.8, 176.0], [73.9, 177.0], [74.0, 177.0], [74.1, 177.0], [74.2, 177.0], [74.3, 177.0], [74.4, 178.0], [74.5, 178.0], [74.6, 178.0], [74.7, 178.0], [74.8, 179.0], [74.9, 179.0], [75.0, 179.0], [75.1, 179.0], [75.2, 179.0], [75.3, 179.0], [75.4, 179.0], [75.5, 180.0], [75.6, 180.0], [75.7, 181.0], [75.8, 181.0], [75.9, 181.0], [76.0, 181.0], [76.1, 181.0], [76.2, 182.0], [76.3, 182.0], [76.4, 183.0], [76.5, 183.0], [76.6, 184.0], [76.7, 184.0], [76.8, 184.0], [76.9, 184.0], [77.0, 184.0], [77.1, 184.0], [77.2, 185.0], [77.3, 185.0], [77.4, 185.0], [77.5, 186.0], [77.6, 186.0], [77.7, 187.0], [77.8, 187.0], [77.9, 187.0], [78.0, 187.0], [78.1, 187.0], [78.2, 187.0], [78.3, 189.0], [78.4, 189.0], [78.5, 189.0], [78.6, 189.0], [78.7, 189.0], [78.8, 189.0], [78.9, 189.0], [79.0, 190.0], [79.1, 190.0], [79.2, 190.0], [79.3, 190.0], [79.4, 191.0], [79.5, 191.0], [79.6, 191.0], [79.7, 191.0], [79.8, 191.0], [79.9, 191.0], [80.0, 191.0], [80.1, 192.0], [80.2, 192.0], [80.3, 193.0], [80.4, 193.0], [80.5, 193.0], [80.6, 193.0], [80.7, 193.0], [80.8, 194.0], [80.9, 194.0], [81.0, 194.0], [81.1, 194.0], [81.2, 194.0], [81.3, 194.0], [81.4, 195.0], [81.5, 195.0], [81.6, 195.0], [81.7, 196.0], [81.8, 196.0], [81.9, 196.0], [82.0, 196.0], [82.1, 196.0], [82.2, 196.0], [82.3, 196.0], [82.4, 196.0], [82.5, 197.0], [82.6, 197.0], [82.7, 197.0], [82.8, 198.0], [82.9, 198.0], [83.0, 198.0], [83.1, 198.0], [83.2, 200.0], [83.3, 200.0], [83.4, 200.0], [83.5, 200.0], [83.6, 201.0], [83.7, 202.0], [83.8, 202.0], [83.9, 203.0], [84.0, 203.0], [84.1, 203.0], [84.2, 203.0], [84.3, 205.0], [84.4, 205.0], [84.5, 206.0], [84.6, 206.0], [84.7, 208.0], [84.8, 208.0], [84.9, 208.0], [85.0, 209.0], [85.1, 209.0], [85.2, 210.0], [85.3, 210.0], [85.4, 211.0], [85.5, 211.0], [85.6, 211.0], [85.7, 211.0], [85.8, 212.0], [85.9, 213.0], [86.0, 213.0], [86.1, 213.0], [86.2, 213.0], [86.3, 213.0], [86.4, 213.0], [86.5, 215.0], [86.6, 215.0], [86.7, 218.0], [86.8, 218.0], [86.9, 219.0], [87.0, 219.0], [87.1, 219.0], [87.2, 221.0], [87.3, 221.0], [87.4, 221.0], [87.5, 221.0], [87.6, 222.0], [87.7, 222.0], [87.8, 222.0], [87.9, 222.0], [88.0, 222.0], [88.1, 223.0], [88.2, 223.0], [88.3, 224.0], [88.4, 224.0], [88.5, 224.0], [88.6, 224.0], [88.7, 224.0], [88.8, 224.0], [88.9, 225.0], [89.0, 225.0], [89.1, 226.0], [89.2, 229.0], [89.3, 229.0], [89.4, 233.0], [89.5, 233.0], [89.6, 235.0], [89.7, 235.0], [89.8, 241.0], [89.9, 241.0], [90.0, 243.0], [90.1, 243.0], [90.2, 269.0], [90.3, 271.0], [90.4, 271.0], [90.5, 280.0], [90.6, 280.0], [90.7, 282.0], [90.8, 282.0], [90.9, 284.0], [91.0, 284.0], [91.1, 284.0], [91.2, 284.0], [91.3, 313.0], [91.4, 339.0], [91.5, 339.0], [91.6, 344.0], [91.7, 344.0], [91.8, 347.0], [91.9, 347.0], [92.0, 348.0], [92.1, 348.0], [92.2, 349.0], [92.3, 349.0], [92.4, 351.0], [92.5, 357.0], [92.6, 357.0], [92.7, 358.0], [92.8, 358.0], [92.9, 358.0], [93.0, 358.0], [93.1, 358.0], [93.2, 358.0], [93.3, 363.0], [93.4, 363.0], [93.5, 364.0], [93.6, 368.0], [93.7, 368.0], [93.8, 371.0], [93.9, 371.0], [94.0, 381.0], [94.1, 381.0], [94.2, 397.0], [94.3, 397.0], [94.4, 428.0], [94.5, 428.0], [94.6, 432.0], [94.7, 434.0], [94.8, 434.0], [94.9, 436.0], [95.0, 436.0], [95.1, 439.0], [95.2, 439.0], [95.3, 440.0], [95.4, 440.0], [95.5, 440.0], [95.6, 440.0], [95.7, 440.0], [95.8, 442.0], [95.9, 442.0], [96.0, 443.0], [96.1, 443.0], [96.2, 443.0], [96.3, 443.0], [96.4, 443.0], [96.5, 443.0], [96.6, 444.0], [96.7, 444.0], [96.8, 444.0], [96.9, 444.0], [97.0, 444.0], [97.1, 444.0], [97.2, 444.0], [97.3, 444.0], [97.4, 444.0], [97.5, 445.0], [97.6, 445.0], [97.7, 448.0], [97.8, 448.0], [97.9, 449.0], [98.0, 450.0], [98.1, 450.0], [98.2, 450.0], [98.3, 450.0], [98.4, 450.0], [98.5, 450.0], [98.6, 450.0], [98.7, 450.0], [98.8, 450.0], [98.9, 450.0], [99.0, 451.0], [99.1, 451.0], [99.2, 451.0], [99.3, 468.0], [99.4, 468.0], [99.5, 475.0], [99.6, 475.0], [99.7, 505.0], [99.8, 505.0], [99.9, 512.0], [100.0, 512.0]], "isOverall": false, "label": "支付", "isController": false}, {"data": [[0.0, 55.0], [0.1, 55.0], [0.2, 56.0], [0.3, 56.0], [0.4, 56.0], [0.5, 57.0], [0.6, 57.0], [0.7, 57.0], [0.8, 57.0], [0.9, 57.0], [1.0, 57.0], [1.1, 57.0], [1.2, 58.0], [1.3, 58.0], [1.4, 58.0], [1.5, 58.0], [1.6, 58.0], [1.7, 58.0], [1.8, 58.0], [1.9, 58.0], [2.0, 58.0], [2.1, 58.0], [2.2, 58.0], [2.3, 58.0], [2.4, 58.0], [2.5, 59.0], [2.6, 59.0], [2.7, 59.0], [2.8, 59.0], [2.9, 59.0], [3.0, 59.0], [3.1, 59.0], [3.2, 59.0], [3.3, 59.0], [3.4, 59.0], [3.5, 59.0], [3.6, 59.0], [3.7, 59.0], [3.8, 60.0], [3.9, 60.0], [4.0, 60.0], [4.1, 60.0], [4.2, 60.0], [4.3, 60.0], [4.4, 60.0], [4.5, 60.0], [4.6, 60.0], [4.7, 60.0], [4.8, 60.0], [4.9, 60.0], [5.0, 60.0], [5.1, 60.0], [5.2, 60.0], [5.3, 60.0], [5.4, 60.0], [5.5, 60.0], [5.6, 60.0], [5.7, 61.0], [5.8, 61.0], [5.9, 61.0], [6.0, 61.0], [6.1, 61.0], [6.2, 61.0], [6.3, 61.0], [6.4, 61.0], [6.5, 61.0], [6.6, 61.0], [6.7, 61.0], [6.8, 61.0], [6.9, 61.0], [7.0, 61.0], [7.1, 61.0], [7.2, 62.0], [7.3, 62.0], [7.4, 62.0], [7.5, 62.0], [7.6, 62.0], [7.7, 62.0], [7.8, 62.0], [7.9, 62.0], [8.0, 62.0], [8.1, 62.0], [8.2, 62.0], [8.3, 62.0], [8.4, 62.0], [8.5, 62.0], [8.6, 62.0], [8.7, 62.0], [8.8, 62.0], [8.9, 62.0], [9.0, 62.0], [9.1, 63.0], [9.2, 63.0], [9.3, 63.0], [9.4, 63.0], [9.5, 63.0], [9.6, 63.0], [9.7, 63.0], [9.8, 63.0], [9.9, 63.0], [10.0, 63.0], [10.1, 63.0], [10.2, 63.0], [10.3, 63.0], [10.4, 63.0], [10.5, 63.0], [10.6, 63.0], [10.7, 63.0], [10.8, 63.0], [10.9, 63.0], [11.0, 64.0], [11.1, 64.0], [11.2, 64.0], [11.3, 64.0], [11.4, 64.0], [11.5, 64.0], [11.6, 64.0], [11.7, 64.0], [11.8, 64.0], [11.9, 64.0], [12.0, 64.0], [12.1, 64.0], [12.2, 64.0], [12.3, 64.0], [12.4, 64.0], [12.5, 64.0], [12.6, 64.0], [12.7, 64.0], [12.8, 64.0], [12.9, 64.0], [13.0, 64.0], [13.1, 65.0], [13.2, 65.0], [13.3, 65.0], [13.4, 65.0], [13.5, 65.0], [13.6, 65.0], [13.7, 65.0], [13.8, 65.0], [13.9, 65.0], [14.0, 65.0], [14.1, 65.0], [14.2, 65.0], [14.3, 65.0], [14.4, 65.0], [14.5, 65.0], [14.6, 65.0], [14.7, 65.0], [14.8, 65.0], [14.9, 65.0], [15.0, 65.0], [15.1, 65.0], [15.2, 65.0], [15.3, 65.0], [15.4, 65.0], [15.5, 65.0], [15.6, 65.0], [15.7, 65.0], [15.8, 66.0], [15.9, 66.0], [16.0, 66.0], [16.1, 66.0], [16.2, 66.0], [16.3, 66.0], [16.4, 66.0], [16.5, 66.0], [16.6, 66.0], [16.7, 66.0], [16.8, 66.0], [16.9, 66.0], [17.0, 66.0], [17.1, 66.0], [17.2, 66.0], [17.3, 66.0], [17.4, 66.0], [17.5, 66.0], [17.6, 66.0], [17.7, 66.0], [17.8, 66.0], [17.9, 66.0], [18.0, 66.0], [18.1, 66.0], [18.2, 66.0], [18.3, 66.0], [18.4, 66.0], [18.5, 66.0], [18.6, 66.0], [18.7, 66.0], [18.8, 66.0], [18.9, 66.0], [19.0, 67.0], [19.1, 67.0], [19.2, 67.0], [19.3, 67.0], [19.4, 67.0], [19.5, 67.0], [19.6, 67.0], [19.7, 67.0], [19.8, 67.0], [19.9, 67.0], [20.0, 67.0], [20.1, 67.0], [20.2, 67.0], [20.3, 67.0], [20.4, 67.0], [20.5, 67.0], [20.6, 67.0], [20.7, 67.0], [20.8, 67.0], [20.9, 67.0], [21.0, 67.0], [21.1, 67.0], [21.2, 67.0], [21.3, 67.0], [21.4, 67.0], [21.5, 67.0], [21.6, 67.0], [21.7, 67.0], [21.8, 67.0], [21.9, 67.0], [22.0, 67.0], [22.1, 67.0], [22.2, 67.0], [22.3, 67.0], [22.4, 67.0], [22.5, 67.0], [22.6, 68.0], [22.7, 68.0], [22.8, 68.0], [22.9, 68.0], [23.0, 68.0], [23.1, 68.0], [23.2, 68.0], [23.3, 68.0], [23.4, 68.0], [23.5, 68.0], [23.6, 68.0], [23.7, 68.0], [23.8, 68.0], [23.9, 68.0], [24.0, 68.0], [24.1, 68.0], [24.2, 68.0], [24.3, 68.0], [24.4, 68.0], [24.5, 68.0], [24.6, 68.0], [24.7, 68.0], [24.8, 68.0], [24.9, 68.0], [25.0, 68.0], [25.1, 68.0], [25.2, 68.0], [25.3, 68.0], [25.4, 68.0], [25.5, 68.0], [25.6, 68.0], [25.7, 68.0], [25.8, 68.0], [25.9, 68.0], [26.0, 69.0], [26.1, 69.0], [26.2, 69.0], [26.3, 69.0], [26.4, 69.0], [26.5, 69.0], [26.6, 69.0], [26.7, 69.0], [26.8, 69.0], [26.9, 69.0], [27.0, 69.0], [27.1, 69.0], [27.2, 69.0], [27.3, 69.0], [27.4, 69.0], [27.5, 69.0], [27.6, 69.0], [27.7, 69.0], [27.8, 69.0], [27.9, 69.0], [28.0, 69.0], [28.1, 69.0], [28.2, 69.0], [28.3, 69.0], [28.4, 69.0], [28.5, 69.0], [28.6, 69.0], [28.7, 69.0], [28.8, 69.0], [28.9, 69.0], [29.0, 69.0], [29.1, 69.0], [29.2, 69.0], [29.3, 70.0], [29.4, 70.0], [29.5, 70.0], [29.6, 70.0], [29.7, 70.0], [29.8, 70.0], [29.9, 70.0], [30.0, 70.0], [30.1, 70.0], [30.2, 70.0], [30.3, 70.0], [30.4, 70.0], [30.5, 70.0], [30.6, 70.0], [30.7, 70.0], [30.8, 70.0], [30.9, 70.0], [31.0, 70.0], [31.1, 70.0], [31.2, 70.0], [31.3, 70.0], [31.4, 70.0], [31.5, 70.0], [31.6, 70.0], [31.7, 70.0], [31.8, 71.0], [31.9, 71.0], [32.0, 71.0], [32.1, 71.0], [32.2, 71.0], [32.3, 71.0], [32.4, 71.0], [32.5, 71.0], [32.6, 71.0], [32.7, 71.0], [32.8, 71.0], [32.9, 71.0], [33.0, 71.0], [33.1, 71.0], [33.2, 71.0], [33.3, 71.0], [33.4, 71.0], [33.5, 71.0], [33.6, 71.0], [33.7, 71.0], [33.8, 71.0], [33.9, 71.0], [34.0, 72.0], [34.1, 72.0], [34.2, 72.0], [34.3, 72.0], [34.4, 72.0], [34.5, 72.0], [34.6, 72.0], [34.7, 72.0], [34.8, 72.0], [34.9, 72.0], [35.0, 72.0], [35.1, 72.0], [35.2, 72.0], [35.3, 72.0], [35.4, 72.0], [35.5, 72.0], [35.6, 72.0], [35.7, 73.0], [35.8, 73.0], [35.9, 73.0], [36.0, 73.0], [36.1, 73.0], [36.2, 73.0], [36.3, 73.0], [36.4, 73.0], [36.5, 73.0], [36.6, 73.0], [36.7, 74.0], [36.8, 74.0], [36.9, 74.0], [37.0, 74.0], [37.1, 74.0], [37.2, 74.0], [37.3, 74.0], [37.4, 74.0], [37.5, 74.0], [37.6, 74.0], [37.7, 74.0], [37.8, 75.0], [37.9, 75.0], [38.0, 75.0], [38.1, 75.0], [38.2, 75.0], [38.3, 75.0], [38.4, 75.0], [38.5, 75.0], [38.6, 75.0], [38.7, 76.0], [38.8, 76.0], [38.9, 76.0], [39.0, 76.0], [39.1, 76.0], [39.2, 76.0], [39.3, 76.0], [39.4, 76.0], [39.5, 77.0], [39.6, 77.0], [39.7, 77.0], [39.8, 77.0], [39.9, 77.0], [40.0, 77.0], [40.1, 77.0], [40.2, 78.0], [40.3, 78.0], [40.4, 78.0], [40.5, 78.0], [40.6, 79.0], [40.7, 79.0], [40.8, 79.0], [40.9, 79.0], [41.0, 80.0], [41.1, 80.0], [41.2, 80.0], [41.3, 80.0], [41.4, 81.0], [41.5, 81.0], [41.6, 81.0], [41.7, 82.0], [41.8, 82.0], [41.9, 83.0], [42.0, 83.0], [42.1, 83.0], [42.2, 84.0], [42.3, 84.0], [42.4, 84.0], [42.5, 85.0], [42.6, 85.0], [42.7, 86.0], [42.8, 86.0], [42.9, 86.0], [43.0, 87.0], [43.1, 88.0], [43.2, 88.0], [43.3, 89.0], [43.4, 89.0], [43.5, 90.0], [43.6, 92.0], [43.7, 92.0], [43.8, 93.0], [43.9, 93.0], [44.0, 94.0], [44.1, 94.0], [44.2, 95.0], [44.3, 95.0], [44.4, 96.0], [44.5, 96.0], [44.6, 96.0], [44.7, 96.0], [44.8, 97.0], [44.9, 97.0], [45.0, 97.0], [45.1, 97.0], [45.2, 98.0], [45.3, 98.0], [45.4, 98.0], [45.5, 98.0], [45.6, 98.0], [45.7, 98.0], [45.8, 98.0], [45.9, 98.0], [46.0, 99.0], [46.1, 99.0], [46.2, 99.0], [46.3, 99.0], [46.4, 99.0], [46.5, 99.0], [46.6, 99.0], [46.7, 99.0], [46.8, 99.0], [46.9, 99.0], [47.0, 100.0], [47.1, 100.0], [47.2, 100.0], [47.3, 100.0], [47.4, 100.0], [47.5, 100.0], [47.6, 100.0], [47.7, 100.0], [47.8, 100.0], [47.9, 100.0], [48.0, 101.0], [48.1, 101.0], [48.2, 101.0], [48.3, 101.0], [48.4, 101.0], [48.5, 101.0], [48.6, 101.0], [48.7, 101.0], [48.8, 101.0], [48.9, 101.0], [49.0, 101.0], [49.1, 102.0], [49.2, 102.0], [49.3, 102.0], [49.4, 102.0], [49.5, 102.0], [49.6, 102.0], [49.7, 102.0], [49.8, 102.0], [49.9, 102.0], [50.0, 102.0], [50.1, 102.0], [50.2, 102.0], [50.3, 102.0], [50.4, 102.0], [50.5, 103.0], [50.6, 103.0], [50.7, 103.0], [50.8, 103.0], [50.9, 103.0], [51.0, 103.0], [51.1, 103.0], [51.2, 103.0], [51.3, 103.0], [51.4, 103.0], [51.5, 103.0], [51.6, 103.0], [51.7, 103.0], [51.8, 103.0], [51.9, 103.0], [52.0, 104.0], [52.1, 104.0], [52.2, 104.0], [52.3, 104.0], [52.4, 104.0], [52.5, 104.0], [52.6, 104.0], [52.7, 104.0], [52.8, 104.0], [52.9, 104.0], [53.0, 104.0], [53.1, 104.0], [53.2, 104.0], [53.3, 104.0], [53.4, 104.0], [53.5, 104.0], [53.6, 104.0], [53.7, 105.0], [53.8, 105.0], [53.9, 105.0], [54.0, 105.0], [54.1, 105.0], [54.2, 105.0], [54.3, 105.0], [54.4, 105.0], [54.5, 105.0], [54.6, 105.0], [54.7, 105.0], [54.8, 105.0], [54.9, 105.0], [55.0, 105.0], [55.1, 105.0], [55.2, 105.0], [55.3, 105.0], [55.4, 105.0], [55.5, 105.0], [55.6, 105.0], [55.7, 105.0], [55.8, 105.0], [55.9, 105.0], [56.0, 106.0], [56.1, 106.0], [56.2, 106.0], [56.3, 106.0], [56.4, 106.0], [56.5, 106.0], [56.6, 106.0], [56.7, 106.0], [56.8, 106.0], [56.9, 106.0], [57.0, 106.0], [57.1, 106.0], [57.2, 106.0], [57.3, 106.0], [57.4, 106.0], [57.5, 106.0], [57.6, 106.0], [57.7, 106.0], [57.8, 106.0], [57.9, 106.0], [58.0, 106.0], [58.1, 106.0], [58.2, 106.0], [58.3, 106.0], [58.4, 107.0], [58.5, 107.0], [58.6, 107.0], [58.7, 107.0], [58.8, 107.0], [58.9, 107.0], [59.0, 107.0], [59.1, 107.0], [59.2, 107.0], [59.3, 107.0], [59.4, 107.0], [59.5, 107.0], [59.6, 107.0], [59.7, 107.0], [59.8, 107.0], [59.9, 107.0], [60.0, 107.0], [60.1, 107.0], [60.2, 107.0], [60.3, 107.0], [60.4, 107.0], [60.5, 107.0], [60.6, 107.0], [60.7, 108.0], [60.8, 108.0], [60.9, 108.0], [61.0, 108.0], [61.1, 108.0], [61.2, 108.0], [61.3, 108.0], [61.4, 108.0], [61.5, 108.0], [61.6, 108.0], [61.7, 108.0], [61.8, 108.0], [61.9, 108.0], [62.0, 108.0], [62.1, 108.0], [62.2, 108.0], [62.3, 108.0], [62.4, 108.0], [62.5, 108.0], [62.6, 108.0], [62.7, 108.0], [62.8, 108.0], [62.9, 108.0], [63.0, 108.0], [63.1, 109.0], [63.2, 109.0], [63.3, 109.0], [63.4, 109.0], [63.5, 109.0], [63.6, 109.0], [63.7, 109.0], [63.8, 109.0], [63.9, 109.0], [64.0, 109.0], [64.1, 109.0], [64.2, 109.0], [64.3, 109.0], [64.4, 109.0], [64.5, 109.0], [64.6, 109.0], [64.7, 109.0], [64.8, 109.0], [64.9, 109.0], [65.0, 109.0], [65.1, 109.0], [65.2, 109.0], [65.3, 109.0], [65.4, 109.0], [65.5, 109.0], [65.6, 110.0], [65.7, 110.0], [65.8, 110.0], [65.9, 110.0], [66.0, 110.0], [66.1, 110.0], [66.2, 110.0], [66.3, 110.0], [66.4, 110.0], [66.5, 110.0], [66.6, 110.0], [66.7, 110.0], [66.8, 110.0], [66.9, 110.0], [67.0, 110.0], [67.1, 110.0], [67.2, 110.0], [67.3, 110.0], [67.4, 110.0], [67.5, 111.0], [67.6, 111.0], [67.7, 111.0], [67.8, 111.0], [67.9, 111.0], [68.0, 111.0], [68.1, 111.0], [68.2, 111.0], [68.3, 111.0], [68.4, 111.0], [68.5, 111.0], [68.6, 111.0], [68.7, 111.0], [68.8, 111.0], [68.9, 111.0], [69.0, 111.0], [69.1, 111.0], [69.2, 111.0], [69.3, 112.0], [69.4, 112.0], [69.5, 112.0], [69.6, 112.0], [69.7, 112.0], [69.8, 112.0], [69.9, 112.0], [70.0, 112.0], [70.1, 112.0], [70.2, 112.0], [70.3, 112.0], [70.4, 112.0], [70.5, 112.0], [70.6, 112.0], [70.7, 112.0], [70.8, 112.0], [70.9, 112.0], [71.0, 113.0], [71.1, 113.0], [71.2, 113.0], [71.3, 113.0], [71.4, 113.0], [71.5, 113.0], [71.6, 113.0], [71.7, 113.0], [71.8, 113.0], [71.9, 113.0], [72.0, 113.0], [72.1, 113.0], [72.2, 113.0], [72.3, 113.0], [72.4, 114.0], [72.5, 114.0], [72.6, 114.0], [72.7, 114.0], [72.8, 114.0], [72.9, 114.0], [73.0, 114.0], [73.1, 114.0], [73.2, 114.0], [73.3, 114.0], [73.4, 114.0], [73.5, 114.0], [73.6, 114.0], [73.7, 115.0], [73.8, 115.0], [73.9, 115.0], [74.0, 115.0], [74.1, 115.0], [74.2, 115.0], [74.3, 115.0], [74.4, 115.0], [74.5, 115.0], [74.6, 116.0], [74.7, 116.0], [74.8, 116.0], [74.9, 116.0], [75.0, 116.0], [75.1, 116.0], [75.2, 116.0], [75.3, 116.0], [75.4, 117.0], [75.5, 117.0], [75.6, 117.0], [75.7, 117.0], [75.8, 117.0], [75.9, 117.0], [76.0, 117.0], [76.1, 117.0], [76.2, 118.0], [76.3, 118.0], [76.4, 118.0], [76.5, 118.0], [76.6, 118.0], [76.7, 118.0], [76.8, 119.0], [76.9, 119.0], [77.0, 119.0], [77.1, 119.0], [77.2, 119.0], [77.3, 120.0], [77.4, 120.0], [77.5, 120.0], [77.6, 120.0], [77.7, 121.0], [77.8, 121.0], [77.9, 121.0], [78.0, 122.0], [78.1, 122.0], [78.2, 122.0], [78.3, 122.0], [78.4, 123.0], [78.5, 123.0], [78.6, 123.0], [78.7, 124.0], [78.8, 124.0], [78.9, 124.0], [79.0, 124.0], [79.1, 125.0], [79.2, 125.0], [79.3, 125.0], [79.4, 125.0], [79.5, 126.0], [79.6, 126.0], [79.7, 126.0], [79.8, 126.0], [79.9, 127.0], [80.0, 127.0], [80.1, 128.0], [80.2, 128.0], [80.3, 128.0], [80.4, 129.0], [80.5, 129.0], [80.6, 129.0], [80.7, 130.0], [80.8, 130.0], [80.9, 130.0], [81.0, 130.0], [81.1, 131.0], [81.2, 131.0], [81.3, 131.0], [81.4, 132.0], [81.5, 132.0], [81.6, 133.0], [81.7, 133.0], [81.8, 134.0], [81.9, 134.0], [82.0, 134.0], [82.1, 134.0], [82.2, 135.0], [82.3, 135.0], [82.4, 135.0], [82.5, 135.0], [82.6, 136.0], [82.7, 136.0], [82.8, 136.0], [82.9, 137.0], [83.0, 137.0], [83.1, 137.0], [83.2, 138.0], [83.3, 138.0], [83.4, 139.0], [83.5, 139.0], [83.6, 139.0], [83.7, 140.0], [83.8, 140.0], [83.9, 141.0], [84.0, 141.0], [84.1, 142.0], [84.2, 143.0], [84.3, 143.0], [84.4, 143.0], [84.5, 144.0], [84.6, 145.0], [84.7, 145.0], [84.8, 146.0], [84.9, 146.0], [85.0, 146.0], [85.1, 147.0], [85.2, 147.0], [85.3, 148.0], [85.4, 148.0], [85.5, 148.0], [85.6, 149.0], [85.7, 149.0], [85.8, 150.0], [85.9, 150.0], [86.0, 151.0], [86.1, 152.0], [86.2, 152.0], [86.3, 153.0], [86.4, 154.0], [86.5, 154.0], [86.6, 154.0], [86.7, 155.0], [86.8, 155.0], [86.9, 156.0], [87.0, 156.0], [87.1, 157.0], [87.2, 157.0], [87.3, 157.0], [87.4, 158.0], [87.5, 158.0], [87.6, 158.0], [87.7, 159.0], [87.8, 160.0], [87.9, 160.0], [88.0, 161.0], [88.1, 161.0], [88.2, 161.0], [88.3, 162.0], [88.4, 162.0], [88.5, 163.0], [88.6, 163.0], [88.7, 164.0], [88.8, 164.0], [88.9, 165.0], [89.0, 165.0], [89.1, 166.0], [89.2, 167.0], [89.3, 168.0], [89.4, 168.0], [89.5, 169.0], [89.6, 169.0], [89.7, 170.0], [89.8, 170.0], [89.9, 171.0], [90.0, 172.0], [90.1, 173.0], [90.2, 174.0], [90.3, 175.0], [90.4, 176.0], [90.5, 177.0], [90.6, 178.0], [90.7, 179.0], [90.8, 180.0], [90.9, 181.0], [91.0, 182.0], [91.1, 182.0], [91.2, 183.0], [91.3, 183.0], [91.4, 184.0], [91.5, 185.0], [91.6, 186.0], [91.7, 186.0], [91.8, 187.0], [91.9, 187.0], [92.0, 188.0], [92.1, 189.0], [92.2, 189.0], [92.3, 189.0], [92.4, 190.0], [92.5, 191.0], [92.6, 192.0], [92.7, 192.0], [92.8, 194.0], [92.9, 194.0], [93.0, 195.0], [93.1, 196.0], [93.2, 196.0], [93.3, 197.0], [93.4, 198.0], [93.5, 199.0], [93.6, 200.0], [93.7, 201.0], [93.8, 201.0], [93.9, 201.0], [94.0, 202.0], [94.1, 203.0], [94.2, 204.0], [94.3, 205.0], [94.4, 205.0], [94.5, 206.0], [94.6, 207.0], [94.7, 207.0], [94.8, 207.0], [94.9, 208.0], [95.0, 209.0], [95.1, 210.0], [95.2, 211.0], [95.3, 212.0], [95.4, 213.0], [95.5, 213.0], [95.6, 214.0], [95.7, 215.0], [95.8, 217.0], [95.9, 219.0], [96.0, 220.0], [96.1, 221.0], [96.2, 223.0], [96.3, 226.0], [96.4, 227.0], [96.5, 228.0], [96.6, 230.0], [96.7, 232.0], [96.8, 234.0], [96.9, 235.0], [97.0, 237.0], [97.1, 239.0], [97.2, 241.0], [97.3, 243.0], [97.4, 245.0], [97.5, 250.0], [97.6, 253.0], [97.7, 257.0], [97.8, 259.0], [97.9, 262.0], [98.0, 275.0], [98.1, 283.0], [98.2, 298.0], [98.3, 309.0], [98.4, 323.0], [98.5, 330.0], [98.6, 335.0], [98.7, 339.0], [98.8, 344.0], [98.9, 348.0], [99.0, 350.0], [99.1, 359.0], [99.2, 366.0], [99.3, 373.0], [99.4, 379.0], [99.5, 393.0], [99.6, 408.0], [99.7, 417.0], [99.8, 460.0], [99.9, 469.0], [100.0, 508.0]], "isOverall": false, "label": "查询抢购状态2", "isController": false}, {"data": [[0.0, 55.0], [0.1, 58.0], [0.2, 59.0], [0.3, 59.0], [0.4, 60.0], [0.5, 60.0], [0.6, 60.0], [0.7, 61.0], [0.8, 61.0], [0.9, 61.0], [1.0, 62.0], [1.1, 62.0], [1.2, 62.0], [1.3, 62.0], [1.4, 63.0], [1.5, 63.0], [1.6, 63.0], [1.7, 63.0], [1.8, 63.0], [1.9, 63.0], [2.0, 64.0], [2.1, 64.0], [2.2, 64.0], [2.3, 64.0], [2.4, 64.0], [2.5, 64.0], [2.6, 65.0], [2.7, 65.0], [2.8, 65.0], [2.9, 65.0], [3.0, 65.0], [3.1, 65.0], [3.2, 66.0], [3.3, 66.0], [3.4, 66.0], [3.5, 66.0], [3.6, 66.0], [3.7, 66.0], [3.8, 67.0], [3.9, 67.0], [4.0, 67.0], [4.1, 67.0], [4.2, 67.0], [4.3, 67.0], [4.4, 67.0], [4.5, 67.0], [4.6, 67.0], [4.7, 68.0], [4.8, 68.0], [4.9, 68.0], [5.0, 68.0], [5.1, 68.0], [5.2, 68.0], [5.3, 68.0], [5.4, 69.0], [5.5, 69.0], [5.6, 69.0], [5.7, 69.0], [5.8, 69.0], [5.9, 69.0], [6.0, 69.0], [6.1, 69.0], [6.2, 69.0], [6.3, 70.0], [6.4, 70.0], [6.5, 70.0], [6.6, 70.0], [6.7, 70.0], [6.8, 70.0], [6.9, 70.0], [7.0, 71.0], [7.1, 71.0], [7.2, 71.0], [7.3, 71.0], [7.4, 71.0], [7.5, 71.0], [7.6, 71.0], [7.7, 71.0], [7.8, 72.0], [7.9, 72.0], [8.0, 72.0], [8.1, 72.0], [8.2, 72.0], [8.3, 72.0], [8.4, 72.0], [8.5, 72.0], [8.6, 73.0], [8.7, 73.0], [8.8, 73.0], [8.9, 73.0], [9.0, 74.0], [9.1, 74.0], [9.2, 74.0], [9.3, 74.0], [9.4, 74.0], [9.5, 74.0], [9.6, 75.0], [9.7, 75.0], [9.8, 75.0], [9.9, 75.0], [10.0, 75.0], [10.1, 75.0], [10.2, 76.0], [10.3, 76.0], [10.4, 76.0], [10.5, 76.0], [10.6, 77.0], [10.7, 77.0], [10.8, 77.0], [10.9, 77.0], [11.0, 78.0], [11.1, 78.0], [11.2, 78.0], [11.3, 78.0], [11.4, 79.0], [11.5, 79.0], [11.6, 79.0], [11.7, 79.0], [11.8, 79.0], [11.9, 79.0], [12.0, 80.0], [12.1, 80.0], [12.2, 80.0], [12.3, 80.0], [12.4, 81.0], [12.5, 81.0], [12.6, 81.0], [12.7, 81.0], [12.8, 81.0], [12.9, 82.0], [13.0, 82.0], [13.1, 82.0], [13.2, 82.0], [13.3, 82.0], [13.4, 83.0], [13.5, 83.0], [13.6, 83.0], [13.7, 83.0], [13.8, 84.0], [13.9, 84.0], [14.0, 84.0], [14.1, 84.0], [14.2, 84.0], [14.3, 85.0], [14.4, 85.0], [14.5, 85.0], [14.6, 85.0], [14.7, 85.0], [14.8, 86.0], [14.9, 86.0], [15.0, 86.0], [15.1, 86.0], [15.2, 86.0], [15.3, 86.0], [15.4, 87.0], [15.5, 87.0], [15.6, 87.0], [15.7, 87.0], [15.8, 88.0], [15.9, 88.0], [16.0, 88.0], [16.1, 89.0], [16.2, 89.0], [16.3, 89.0], [16.4, 89.0], [16.5, 90.0], [16.6, 90.0], [16.7, 90.0], [16.8, 90.0], [16.9, 91.0], [17.0, 91.0], [17.1, 91.0], [17.2, 91.0], [17.3, 92.0], [17.4, 92.0], [17.5, 92.0], [17.6, 93.0], [17.7, 93.0], [17.8, 93.0], [17.9, 93.0], [18.0, 94.0], [18.1, 94.0], [18.2, 94.0], [18.3, 95.0], [18.4, 95.0], [18.5, 95.0], [18.6, 95.0], [18.7, 96.0], [18.8, 96.0], [18.9, 96.0], [19.0, 97.0], [19.1, 97.0], [19.2, 97.0], [19.3, 97.0], [19.4, 98.0], [19.5, 98.0], [19.6, 98.0], [19.7, 98.0], [19.8, 99.0], [19.9, 99.0], [20.0, 99.0], [20.1, 100.0], [20.2, 100.0], [20.3, 100.0], [20.4, 100.0], [20.5, 101.0], [20.6, 101.0], [20.7, 101.0], [20.8, 101.0], [20.9, 101.0], [21.0, 102.0], [21.1, 102.0], [21.2, 102.0], [21.3, 102.0], [21.4, 102.0], [21.5, 102.0], [21.6, 103.0], [21.7, 103.0], [21.8, 103.0], [21.9, 103.0], [22.0, 103.0], [22.1, 104.0], [22.2, 104.0], [22.3, 104.0], [22.4, 104.0], [22.5, 104.0], [22.6, 104.0], [22.7, 104.0], [22.8, 105.0], [22.9, 105.0], [23.0, 105.0], [23.1, 105.0], [23.2, 105.0], [23.3, 105.0], [23.4, 106.0], [23.5, 106.0], [23.6, 106.0], [23.7, 106.0], [23.8, 106.0], [23.9, 106.0], [24.0, 107.0], [24.1, 107.0], [24.2, 107.0], [24.3, 107.0], [24.4, 107.0], [24.5, 107.0], [24.6, 107.0], [24.7, 107.0], [24.8, 107.0], [24.9, 108.0], [25.0, 108.0], [25.1, 108.0], [25.2, 108.0], [25.3, 108.0], [25.4, 108.0], [25.5, 108.0], [25.6, 108.0], [25.7, 108.0], [25.8, 109.0], [25.9, 109.0], [26.0, 109.0], [26.1, 109.0], [26.2, 109.0], [26.3, 109.0], [26.4, 109.0], [26.5, 109.0], [26.6, 110.0], [26.7, 110.0], [26.8, 110.0], [26.9, 110.0], [27.0, 110.0], [27.1, 110.0], [27.2, 110.0], [27.3, 110.0], [27.4, 111.0], [27.5, 111.0], [27.6, 111.0], [27.7, 111.0], [27.8, 111.0], [27.9, 111.0], [28.0, 111.0], [28.1, 111.0], [28.2, 111.0], [28.3, 112.0], [28.4, 112.0], [28.5, 112.0], [28.6, 112.0], [28.7, 112.0], [28.8, 112.0], [28.9, 112.0], [29.0, 112.0], [29.1, 113.0], [29.2, 113.0], [29.3, 113.0], [29.4, 113.0], [29.5, 113.0], [29.6, 113.0], [29.7, 114.0], [29.8, 114.0], [29.9, 114.0], [30.0, 114.0], [30.1, 114.0], [30.2, 114.0], [30.3, 114.0], [30.4, 114.0], [30.5, 114.0], [30.6, 115.0], [30.7, 115.0], [30.8, 115.0], [30.9, 115.0], [31.0, 115.0], [31.1, 115.0], [31.2, 115.0], [31.3, 116.0], [31.4, 116.0], [31.5, 116.0], [31.6, 116.0], [31.7, 116.0], [31.8, 116.0], [31.9, 116.0], [32.0, 116.0], [32.1, 116.0], [32.2, 117.0], [32.3, 117.0], [32.4, 117.0], [32.5, 117.0], [32.6, 117.0], [32.7, 117.0], [32.8, 117.0], [32.9, 117.0], [33.0, 118.0], [33.1, 118.0], [33.2, 118.0], [33.3, 118.0], [33.4, 118.0], [33.5, 118.0], [33.6, 118.0], [33.7, 118.0], [33.8, 119.0], [33.9, 119.0], [34.0, 119.0], [34.1, 119.0], [34.2, 119.0], [34.3, 119.0], [34.4, 120.0], [34.5, 120.0], [34.6, 120.0], [34.7, 120.0], [34.8, 120.0], [34.9, 120.0], [35.0, 121.0], [35.1, 121.0], [35.2, 121.0], [35.3, 121.0], [35.4, 121.0], [35.5, 121.0], [35.6, 121.0], [35.7, 122.0], [35.8, 122.0], [35.9, 122.0], [36.0, 122.0], [36.1, 122.0], [36.2, 122.0], [36.3, 123.0], [36.4, 123.0], [36.5, 123.0], [36.6, 123.0], [36.7, 123.0], [36.8, 123.0], [36.9, 123.0], [37.0, 123.0], [37.1, 124.0], [37.2, 124.0], [37.3, 124.0], [37.4, 124.0], [37.5, 124.0], [37.6, 125.0], [37.7, 125.0], [37.8, 125.0], [37.9, 125.0], [38.0, 125.0], [38.1, 126.0], [38.2, 126.0], [38.3, 126.0], [38.4, 126.0], [38.5, 126.0], [38.6, 126.0], [38.7, 127.0], [38.8, 127.0], [38.9, 127.0], [39.0, 127.0], [39.1, 127.0], [39.2, 127.0], [39.3, 128.0], [39.4, 128.0], [39.5, 128.0], [39.6, 128.0], [39.7, 128.0], [39.8, 129.0], [39.9, 129.0], [40.0, 129.0], [40.1, 129.0], [40.2, 130.0], [40.3, 130.0], [40.4, 130.0], [40.5, 131.0], [40.6, 131.0], [40.7, 131.0], [40.8, 131.0], [40.9, 131.0], [41.0, 131.0], [41.1, 132.0], [41.2, 132.0], [41.3, 132.0], [41.4, 133.0], [41.5, 133.0], [41.6, 133.0], [41.7, 133.0], [41.8, 134.0], [41.9, 134.0], [42.0, 134.0], [42.1, 134.0], [42.2, 135.0], [42.3, 135.0], [42.4, 135.0], [42.5, 135.0], [42.6, 136.0], [42.7, 136.0], [42.8, 136.0], [42.9, 136.0], [43.0, 137.0], [43.1, 137.0], [43.2, 137.0], [43.3, 138.0], [43.4, 138.0], [43.5, 138.0], [43.6, 138.0], [43.7, 139.0], [43.8, 139.0], [43.9, 139.0], [44.0, 139.0], [44.1, 140.0], [44.2, 140.0], [44.3, 140.0], [44.4, 140.0], [44.5, 140.0], [44.6, 140.0], [44.7, 141.0], [44.8, 141.0], [44.9, 141.0], [45.0, 141.0], [45.1, 142.0], [45.2, 142.0], [45.3, 142.0], [45.4, 142.0], [45.5, 143.0], [45.6, 143.0], [45.7, 143.0], [45.8, 143.0], [45.9, 144.0], [46.0, 144.0], [46.1, 144.0], [46.2, 144.0], [46.3, 144.0], [46.4, 145.0], [46.5, 145.0], [46.6, 145.0], [46.7, 145.0], [46.8, 145.0], [46.9, 145.0], [47.0, 146.0], [47.1, 146.0], [47.2, 146.0], [47.3, 146.0], [47.4, 147.0], [47.5, 147.0], [47.6, 147.0], [47.7, 147.0], [47.8, 147.0], [47.9, 148.0], [48.0, 148.0], [48.1, 148.0], [48.2, 148.0], [48.3, 148.0], [48.4, 149.0], [48.5, 149.0], [48.6, 149.0], [48.7, 149.0], [48.8, 149.0], [48.9, 150.0], [49.0, 150.0], [49.1, 150.0], [49.2, 150.0], [49.3, 150.0], [49.4, 150.0], [49.5, 151.0], [49.6, 151.0], [49.7, 151.0], [49.8, 151.0], [49.9, 151.0], [50.0, 152.0], [50.1, 152.0], [50.2, 152.0], [50.3, 152.0], [50.4, 152.0], [50.5, 153.0], [50.6, 153.0], [50.7, 153.0], [50.8, 153.0], [50.9, 154.0], [51.0, 154.0], [51.1, 154.0], [51.2, 154.0], [51.3, 155.0], [51.4, 155.0], [51.5, 155.0], [51.6, 155.0], [51.7, 156.0], [51.8, 156.0], [51.9, 156.0], [52.0, 156.0], [52.1, 157.0], [52.2, 157.0], [52.3, 157.0], [52.4, 158.0], [52.5, 158.0], [52.6, 158.0], [52.7, 158.0], [52.8, 159.0], [52.9, 159.0], [53.0, 159.0], [53.1, 159.0], [53.2, 160.0], [53.3, 160.0], [53.4, 160.0], [53.5, 160.0], [53.6, 160.0], [53.7, 161.0], [53.8, 161.0], [53.9, 161.0], [54.0, 162.0], [54.1, 162.0], [54.2, 162.0], [54.3, 163.0], [54.4, 163.0], [54.5, 163.0], [54.6, 163.0], [54.7, 164.0], [54.8, 164.0], [54.9, 164.0], [55.0, 165.0], [55.1, 165.0], [55.2, 165.0], [55.3, 165.0], [55.4, 166.0], [55.5, 166.0], [55.6, 166.0], [55.7, 166.0], [55.8, 167.0], [55.9, 167.0], [56.0, 167.0], [56.1, 168.0], [56.2, 168.0], [56.3, 168.0], [56.4, 169.0], [56.5, 169.0], [56.6, 170.0], [56.7, 170.0], [56.8, 170.0], [56.9, 170.0], [57.0, 170.0], [57.1, 171.0], [57.2, 171.0], [57.3, 172.0], [57.4, 172.0], [57.5, 172.0], [57.6, 173.0], [57.7, 173.0], [57.8, 173.0], [57.9, 174.0], [58.0, 174.0], [58.1, 174.0], [58.2, 174.0], [58.3, 175.0], [58.4, 175.0], [58.5, 175.0], [58.6, 176.0], [58.7, 176.0], [58.8, 177.0], [58.9, 177.0], [59.0, 177.0], [59.1, 178.0], [59.2, 178.0], [59.3, 178.0], [59.4, 179.0], [59.5, 179.0], [59.6, 179.0], [59.7, 180.0], [59.8, 180.0], [59.9, 180.0], [60.0, 181.0], [60.1, 181.0], [60.2, 182.0], [60.3, 182.0], [60.4, 182.0], [60.5, 182.0], [60.6, 183.0], [60.7, 183.0], [60.8, 183.0], [60.9, 183.0], [61.0, 184.0], [61.1, 184.0], [61.2, 184.0], [61.3, 185.0], [61.4, 185.0], [61.5, 185.0], [61.6, 186.0], [61.7, 186.0], [61.8, 186.0], [61.9, 186.0], [62.0, 187.0], [62.1, 187.0], [62.2, 187.0], [62.3, 188.0], [62.4, 188.0], [62.5, 188.0], [62.6, 188.0], [62.7, 189.0], [62.8, 189.0], [62.9, 189.0], [63.0, 189.0], [63.1, 189.0], [63.2, 190.0], [63.3, 190.0], [63.4, 190.0], [63.5, 190.0], [63.6, 191.0], [63.7, 191.0], [63.8, 191.0], [63.9, 192.0], [64.0, 192.0], [64.1, 192.0], [64.2, 193.0], [64.3, 193.0], [64.4, 193.0], [64.5, 193.0], [64.6, 193.0], [64.7, 194.0], [64.8, 194.0], [64.9, 194.0], [65.0, 195.0], [65.1, 195.0], [65.2, 195.0], [65.3, 195.0], [65.4, 196.0], [65.5, 196.0], [65.6, 196.0], [65.7, 197.0], [65.8, 197.0], [65.9, 197.0], [66.0, 197.0], [66.1, 197.0], [66.2, 198.0], [66.3, 198.0], [66.4, 198.0], [66.5, 198.0], [66.6, 199.0], [66.7, 199.0], [66.8, 199.0], [66.9, 200.0], [67.0, 200.0], [67.1, 200.0], [67.2, 200.0], [67.3, 201.0], [67.4, 201.0], [67.5, 201.0], [67.6, 201.0], [67.7, 201.0], [67.8, 202.0], [67.9, 202.0], [68.0, 202.0], [68.1, 202.0], [68.2, 203.0], [68.3, 203.0], [68.4, 203.0], [68.5, 204.0], [68.6, 204.0], [68.7, 204.0], [68.8, 204.0], [68.9, 205.0], [69.0, 205.0], [69.1, 205.0], [69.2, 206.0], [69.3, 206.0], [69.4, 206.0], [69.5, 206.0], [69.6, 207.0], [69.7, 207.0], [69.8, 208.0], [69.9, 208.0], [70.0, 208.0], [70.1, 209.0], [70.2, 209.0], [70.3, 209.0], [70.4, 210.0], [70.5, 210.0], [70.6, 210.0], [70.7, 211.0], [70.8, 211.0], [70.9, 212.0], [71.0, 212.0], [71.1, 213.0], [71.2, 213.0], [71.3, 214.0], [71.4, 214.0], [71.5, 214.0], [71.6, 215.0], [71.7, 215.0], [71.8, 215.0], [71.9, 216.0], [72.0, 216.0], [72.1, 217.0], [72.2, 218.0], [72.3, 218.0], [72.4, 219.0], [72.5, 219.0], [72.6, 219.0], [72.7, 220.0], [72.8, 220.0], [72.9, 221.0], [73.0, 221.0], [73.1, 222.0], [73.2, 222.0], [73.3, 223.0], [73.4, 223.0], [73.5, 224.0], [73.6, 224.0], [73.7, 224.0], [73.8, 225.0], [73.9, 225.0], [74.0, 226.0], [74.1, 226.0], [74.2, 226.0], [74.3, 227.0], [74.4, 227.0], [74.5, 228.0], [74.6, 228.0], [74.7, 229.0], [74.8, 229.0], [74.9, 229.0], [75.0, 230.0], [75.1, 230.0], [75.2, 231.0], [75.3, 231.0], [75.4, 232.0], [75.5, 232.0], [75.6, 233.0], [75.7, 233.0], [75.8, 233.0], [75.9, 234.0], [76.0, 234.0], [76.1, 235.0], [76.2, 235.0], [76.3, 236.0], [76.4, 236.0], [76.5, 237.0], [76.6, 237.0], [76.7, 238.0], [76.8, 238.0], [76.9, 239.0], [77.0, 240.0], [77.1, 241.0], [77.2, 241.0], [77.3, 242.0], [77.4, 242.0], [77.5, 242.0], [77.6, 243.0], [77.7, 243.0], [77.8, 244.0], [77.9, 244.0], [78.0, 244.0], [78.1, 245.0], [78.2, 246.0], [78.3, 246.0], [78.4, 247.0], [78.5, 247.0], [78.6, 248.0], [78.7, 248.0], [78.8, 249.0], [78.9, 249.0], [79.0, 250.0], [79.1, 250.0], [79.2, 251.0], [79.3, 251.0], [79.4, 251.0], [79.5, 252.0], [79.6, 253.0], [79.7, 253.0], [79.8, 253.0], [79.9, 254.0], [80.0, 255.0], [80.1, 255.0], [80.2, 256.0], [80.3, 257.0], [80.4, 257.0], [80.5, 258.0], [80.6, 258.0], [80.7, 259.0], [80.8, 260.0], [80.9, 260.0], [81.0, 261.0], [81.1, 261.0], [81.2, 262.0], [81.3, 262.0], [81.4, 263.0], [81.5, 264.0], [81.6, 264.0], [81.7, 265.0], [81.8, 265.0], [81.9, 266.0], [82.0, 266.0], [82.1, 267.0], [82.2, 267.0], [82.3, 268.0], [82.4, 268.0], [82.5, 269.0], [82.6, 269.0], [82.7, 270.0], [82.8, 271.0], [82.9, 271.0], [83.0, 272.0], [83.1, 272.0], [83.2, 273.0], [83.3, 274.0], [83.4, 274.0], [83.5, 275.0], [83.6, 275.0], [83.7, 276.0], [83.8, 277.0], [83.9, 278.0], [84.0, 278.0], [84.1, 279.0], [84.2, 280.0], [84.3, 280.0], [84.4, 281.0], [84.5, 281.0], [84.6, 282.0], [84.7, 283.0], [84.8, 283.0], [84.9, 284.0], [85.0, 284.0], [85.1, 285.0], [85.2, 285.0], [85.3, 286.0], [85.4, 287.0], [85.5, 287.0], [85.6, 288.0], [85.7, 289.0], [85.8, 290.0], [85.9, 290.0], [86.0, 291.0], [86.1, 292.0], [86.2, 293.0], [86.3, 294.0], [86.4, 294.0], [86.5, 295.0], [86.6, 295.0], [86.7, 296.0], [86.8, 297.0], [86.9, 298.0], [87.0, 299.0], [87.1, 300.0], [87.2, 300.0], [87.3, 302.0], [87.4, 303.0], [87.5, 304.0], [87.6, 305.0], [87.7, 306.0], [87.8, 307.0], [87.9, 308.0], [88.0, 309.0], [88.1, 310.0], [88.2, 310.0], [88.3, 311.0], [88.4, 312.0], [88.5, 312.0], [88.6, 314.0], [88.7, 315.0], [88.8, 316.0], [88.9, 318.0], [89.0, 318.0], [89.1, 319.0], [89.2, 320.0], [89.3, 320.0], [89.4, 321.0], [89.5, 322.0], [89.6, 323.0], [89.7, 324.0], [89.8, 325.0], [89.9, 326.0], [90.0, 328.0], [90.1, 329.0], [90.2, 330.0], [90.3, 331.0], [90.4, 332.0], [90.5, 333.0], [90.6, 335.0], [90.7, 335.0], [90.8, 336.0], [90.9, 338.0], [91.0, 339.0], [91.1, 340.0], [91.2, 340.0], [91.3, 342.0], [91.4, 343.0], [91.5, 344.0], [91.6, 345.0], [91.7, 346.0], [91.8, 347.0], [91.9, 348.0], [92.0, 349.0], [92.1, 350.0], [92.2, 350.0], [92.3, 351.0], [92.4, 352.0], [92.5, 353.0], [92.6, 354.0], [92.7, 355.0], [92.8, 357.0], [92.9, 360.0], [93.0, 362.0], [93.1, 365.0], [93.2, 368.0], [93.3, 370.0], [93.4, 371.0], [93.5, 373.0], [93.6, 374.0], [93.7, 376.0], [93.8, 379.0], [93.9, 380.0], [94.0, 382.0], [94.1, 384.0], [94.2, 387.0], [94.3, 390.0], [94.4, 392.0], [94.5, 394.0], [94.6, 397.0], [94.7, 400.0], [94.8, 402.0], [94.9, 405.0], [95.0, 407.0], [95.1, 409.0], [95.2, 410.0], [95.3, 413.0], [95.4, 415.0], [95.5, 416.0], [95.6, 419.0], [95.7, 421.0], [95.8, 422.0], [95.9, 423.0], [96.0, 424.0], [96.1, 425.0], [96.2, 426.0], [96.3, 428.0], [96.4, 429.0], [96.5, 430.0], [96.6, 433.0], [96.7, 434.0], [96.8, 437.0], [96.9, 438.0], [97.0, 441.0], [97.1, 443.0], [97.2, 444.0], [97.3, 448.0], [97.4, 452.0], [97.5, 454.0], [97.6, 456.0], [97.7, 460.0], [97.8, 463.0], [97.9, 465.0], [98.0, 467.0], [98.1, 472.0], [98.2, 477.0], [98.3, 499.0], [98.4, 509.0], [98.5, 519.0], [98.6, 531.0], [98.7, 557.0], [98.8, 567.0], [98.9, 581.0], [99.0, 592.0], [99.1, 594.0], [99.2, 598.0], [99.3, 600.0], [99.4, 602.0], [99.5, 603.0], [99.6, 606.0], [99.7, 633.0], [99.8, 718.0], [99.9, 731.0]], "isOverall": false, "label": "查询抢购状态1", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 5526.0, "series": [{"data": [[1100.0, 218.0], [300.0, 12.0], [600.0, 152.0], [1200.0, 10.0], [1300.0, 1.0], [700.0, 146.0], [400.0, 14.0], [800.0, 129.0], [900.0, 146.0], [500.0, 20.0], [1000.0, 152.0]], "isOverall": false, "label": "抢购下单", "isController": false}, {"data": [[0.0, 188.0], [300.0, 17.0], [400.0, 29.0], [200.0, 44.0], [100.0, 266.0], [500.0, 2.0]], "isOverall": false, "label": "支付", "isController": false}, {"data": [[0.0, 3318.0], [300.0, 93.0], [100.0, 3295.0], [200.0, 329.0], [400.0, 33.0], [500.0, 1.0]], "isOverall": false, "label": "查询抢购状态2", "isController": false}, {"data": [[0.0, 2369.0], [600.0, 55.0], [300.0, 897.0], [700.0, 31.0], [400.0, 427.0], [200.0, 2391.0], [100.0, 5526.0], [500.0, 114.0]], "isOverall": false, "label": "查询抢购状态1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 958.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 17855.0, "series": [{"data": [[0.0, 1612.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 958.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 17855.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 67.34489402697497, "minX": 1.59548424E12, "maxY": 718.760675173318, "series": [{"data": [[1.59548424E12, 718.760675173318], [1.5954843E12, 67.34489402697497]], "isOverall": false, "label": "抢购", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5954843E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 56.0, "minX": 1.0, "maxY": 1311.0, "series": [{"data": [[286.0, 396.5], [298.0, 403.0], [299.0, 376.0], [292.0, 387.0], [294.0, 365.0], [297.0, 375.0], [303.0, 427.5], [295.0, 450.0], [293.0, 446.0], [304.0, 392.0], [309.0, 469.75], [311.0, 431.0], [329.0, 551.0], [343.0, 521.5], [351.0, 581.0], [355.0, 539.6666666666666], [356.0, 540.0], [389.0, 616.0], [402.0, 695.0], [462.0, 850.0], [463.0, 758.0], [466.0, 861.0], [465.0, 771.0], [467.0, 784.0], [476.0, 835.0], [468.0, 878.0], [470.0, 780.0], [471.0, 843.0], [472.0, 791.0], [473.0, 847.0], [475.0, 879.0], [484.0, 712.0], [485.0, 899.0], [490.0, 889.25], [491.0, 827.5], [492.0, 832.6666666666666], [494.0, 836.0], [497.0, 857.25], [496.0, 838.0], [498.0, 842.0], [499.0, 856.6666666666666], [500.0, 916.0], [501.0, 825.0], [502.0, 788.6666666666666], [503.0, 870.0], [504.0, 866.5], [508.0, 884.0], [505.0, 919.2727272727273], [506.0, 913.3333333333334], [507.0, 894.0], [525.0, 944.5], [519.0, 945.0], [520.0, 918.0], [521.0, 958.0], [522.0, 936.25], [527.0, 985.0], [528.0, 918.6666666666666], [537.0, 1014.0], [529.0, 993.0], [533.0, 1040.0], [535.0, 1040.0], [549.0, 1033.0], [550.0, 928.5], [551.0, 780.0], [573.0, 1090.0], [574.0, 1032.0], [579.0, 1041.0], [578.0, 941.0], [581.0, 1046.0], [584.0, 856.0], [585.0, 1062.0], [587.0, 1057.0], [593.0, 980.0], [594.0, 977.5], [596.0, 1063.0], [597.0, 1068.0], [621.0, 1036.0], [612.0, 1087.0], [613.0, 1027.5], [614.0, 996.5], [615.0, 1087.0], [624.0, 1050.25], [638.0, 1094.3333333333333], [639.0, 1070.0], [636.0, 1014.5], [637.0, 1106.0], [625.0, 1049.5], [626.0, 1083.8235294117644], [617.0, 1050.0], [619.0, 1041.3333333333333], [620.0, 1070.0], [622.0, 1170.5], [623.0, 1022.75], [653.0, 973.0], [643.0, 1073.0], [644.0, 1182.0], [646.0, 1106.6], [647.0, 1071.5882352941178], [656.0, 1010.0], [671.0, 729.6666666666666], [665.0, 871.0], [666.0, 1030.0], [658.0, 1311.0], [659.0, 706.0], [660.0, 1029.3333333333333], [648.0, 1068.2857142857142], [649.0, 1009.0], [651.0, 1032.0], [654.0, 1042.0], [655.0, 1026.7], [672.0, 1030.0], [678.0, 1035.0], [703.0, 1062.0], [680.0, 1062.0], [681.0, 1056.0], [685.0, 1040.0], [687.0, 1056.3333333333333], [688.0, 1044.0], [691.0, 1065.0], [694.0, 1107.0], [705.0, 1075.0], [708.0, 854.0], [714.0, 863.0], [722.0, 1103.0], [734.0, 951.0], [735.0, 1116.5], [742.0, 1119.0], [743.0, 1137.0], [745.0, 1137.0], [764.0, 1161.5], [765.0, 1152.0], [766.0, 1051.0], [767.0, 1168.0], [784.0, 1147.75], [768.0, 1159.0], [792.0, 1183.0], [793.0, 1192.0], [794.0, 997.0], [795.0, 1199.0], [782.0, 1100.0], [783.0, 1188.0], [787.0, 1188.0], [788.0, 1196.0], [789.0, 1165.0], [790.0, 1177.0], [791.0, 1194.0], [807.0, 1179.5], [801.0, 1177.0], [800.0, 1203.0], [815.0, 1183.0], [802.0, 1189.0], [803.0, 1142.1666666666667], [804.0, 1186.0588235294117], [821.0, 1175.0], [831.0, 1131.0], [829.0, 1138.5], [830.0, 1093.0], [826.0, 1142.5], [828.0, 1077.5], [824.0, 1172.0], [825.0, 1154.0], [822.0, 1189.0], [823.0, 1169.3333333333333], [808.0, 1167.3333333333333], [810.0, 1095.3333333333333], [813.0, 1160.0], [814.0, 1171.5], [838.0, 1144.0], [832.0, 1096.0], [839.0, 1136.5], [840.0, 1137.0], [846.0, 1128.5], [847.0, 1144.0], [848.0, 1149.0], [849.0, 1138.0], [852.0, 1141.0], [867.0, 1142.5], [876.0, 1151.0], [866.0, 1159.0], [879.0, 1151.0], [868.0, 1146.5], [869.0, 953.0], [880.0, 1157.0], [894.0, 1031.5], [892.0, 1143.0], [893.0, 1010.5], [890.0, 1134.5], [891.0, 1145.0], [888.0, 1150.0], [889.0, 1156.0], [882.0, 1161.0], [883.0, 1155.0], [885.0, 1141.0], [886.0, 1135.0], [887.0, 1147.0], [872.0, 1153.5], [873.0, 1175.0], [875.0, 1164.0], [877.0, 1158.0], [878.0, 765.0], [897.0, 1132.0], [896.0, 1000.3333333333334], [911.0, 1109.0], [909.0, 1101.0], [910.0, 1102.0], [907.0, 1127.0], [908.0, 1096.3333333333333], [898.0, 982.3333333333334], [899.0, 1128.0], [900.0, 1115.0], [902.0, 1120.0], [903.0, 1114.0], [921.0, 1126.0], [922.0, 1122.0], [923.0, 1113.0], [925.0, 1112.6666666666667], [926.0, 1111.0], [927.0, 1116.25], [905.0, 1099.75], [906.0, 1116.6666666666667], [934.0, 756.3636363636365], [930.0, 1093.0], [928.0, 1113.0], [943.0, 755.2857142857143], [941.0, 818.5454545454545], [940.0, 750.6666666666666], [942.0, 670.6363636363635], [938.0, 755.076923076923], [939.0, 781.0], [931.0, 1094.5], [932.0, 1080.947368421053], [933.0, 999.2857142857143], [935.0, 659.7027027027027], [952.0, 819.4444444444446], [953.0, 847.8], [954.0, 850.4], [955.0, 792.2222222222223], [956.0, 765.0909090909091], [957.0, 842.421052631579], [958.0, 865.15], [959.0, 820.611111111111], [944.0, 707.9090909090909], [945.0, 682.9545454545454], [946.0, 872.6666666666666], [947.0, 790.3333333333334], [948.0, 747.846153846154], [949.0, 750.7241379310344], [951.0, 794.4666666666665], [950.0, 764.6363636363635], [936.0, 697.3636363636365], [937.0, 676.4666666666666], [963.0, 909.2666666666667], [964.0, 914.0555555555557], [965.0, 879.5714285714287], [966.0, 919.1666666666666], [962.0, 881.5], [961.0, 848.9130434782608], [960.0, 853.1666666666667]], "isOverall": false, "label": "抢购下单", "isController": false}, {"data": [[815.8480000000004, 902.4679999999994]], "isOverall": false, "label": "抢购下单-Aggregated", "isController": false}, {"data": [[667.0, 89.0], [666.0, 81.0], [664.0, 97.0], [661.0, 89.0], [660.0, 82.0], [689.0, 79.0], [686.0, 82.0], [683.0, 79.0], [681.0, 86.0], [673.0, 87.0], [726.0, 85.72727272727272], [725.0, 97.75], [723.0, 101.0], [721.0, 98.0], [718.0, 83.0], [715.0, 79.0], [711.0, 85.25], [710.0, 131.0], [757.0, 95.1842105263158], [741.0, 83.51724137931033], [787.0, 101.2666666666667], [778.0, 114.0], [776.0, 120.0], [768.0, 104.03030303030303], [831.0, 153.51428571428573], [817.0, 87.0], [816.0, 86.94117647058822], [802.0, 123.66666666666666], [860.0, 171.8], [859.0, 171.03125], [845.0, 90.62068965517243], [895.0, 220.33333333333334], [894.0, 221.0], [892.0, 233.0], [891.0, 226.0], [889.0, 213.0], [887.0, 211.5], [886.0, 222.0], [884.0, 313.0], [873.0, 102.75999999999999], [923.0, 220.83333333333334], [922.0, 184.2], [921.0, 189.0], [908.0, 225.875], [900.0, 205.5], [898.0, 186.23529411764707], [897.0, 199.75], [896.0, 212.0], [934.0, 372.5], [933.0, 397.0], [932.0, 329.75000000000006], [931.0, 153.66666666666666], [930.0, 166.5]], "isOverall": false, "label": "支付", "isController": false}, {"data": [[829.6666666666672, 152.8315018315019]], "isOverall": false, "label": "支付-Aggregated", "isController": false}, {"data": [[2.0, 57.0], [3.0, 74.0], [4.0, 60.0], [5.0, 57.0], [6.0, 72.0], [7.0, 63.0], [8.0, 66.0], [9.0, 56.0], [10.0, 111.2], [11.0, 110.0], [12.0, 116.0], [13.0, 101.5], [14.0, 104.66666666666667], [15.0, 102.33333333333333], [16.0, 112.0], [17.0, 122.0], [18.0, 120.0], [19.0, 107.0], [20.0, 109.0], [21.0, 73.6], [22.0, 71.25], [23.0, 77.25], [24.0, 76.66666666666667], [25.0, 71.0], [26.0, 73.0], [27.0, 68.0], [29.0, 75.33333333333333], [30.0, 60.0], [31.0, 73.0], [33.0, 74.0], [32.0, 73.0], [35.0, 106.51724137931036], [34.0, 70.5], [37.0, 107.83333333333333], [36.0, 108.0], [39.0, 107.0], [38.0, 111.0], [41.0, 106.0], [40.0, 108.0], [43.0, 108.0], [42.0, 112.0], [44.0, 110.0], [47.0, 114.0], [46.0, 106.5], [49.0, 105.0], [48.0, 114.0], [51.0, 71.80952380952382], [50.0, 107.0], [53.0, 67.0], [52.0, 67.0], [55.0, 61.85714285714286], [54.0, 61.0], [57.0, 68.0], [56.0, 69.4], [59.0, 67.0], [58.0, 67.0], [61.0, 69.0], [60.0, 68.0], [63.0, 110.33333333333333], [62.0, 105.65306122448979], [66.0, 98.0], [65.0, 112.0], [64.0, 106.5], [71.0, 107.0], [70.0, 102.0], [69.0, 105.5], [68.0, 106.0], [75.0, 74.4], [74.0, 73.66216216216213], [72.0, 112.0], [79.0, 71.0], [78.0, 60.0], [77.0, 68.0], [76.0, 69.0], [83.0, 68.5], [82.0, 80.0], [81.0, 78.0], [80.0, 69.0], [87.0, 102.66666666666667], [86.0, 107.33333333333333], [85.0, 82.0], [84.0, 72.25], [91.0, 106.78947368421052], [90.0, 101.75], [89.0, 102.85714285714285], [88.0, 105.0], [95.0, 112.0], [94.0, 110.5], [93.0, 104.5], [92.0, 100.5], [99.0, 104.66666666666667], [98.0, 107.6], [97.0, 102.0], [96.0, 106.0], [103.0, 62.0], [102.0, 67.0], [101.0, 66.01190476190474], [100.0, 106.0], [107.0, 61.5], [106.0, 60.0], [105.0, 63.142857142857146], [104.0, 66.33333333333333], [111.0, 69.0], [110.0, 61.0], [109.0, 71.0], [108.0, 66.5], [115.0, 101.92307692307692], [114.0, 104.78048780487806], [113.0, 68.0], [112.0, 58.0], [119.0, 105.0], [118.0, 105.66666666666667], [117.0, 105.4], [116.0, 110.66666666666667], [123.0, 113.0], [122.0, 103.0], [121.0, 106.0], [120.0, 109.0], [127.0, 63.323943661971825], [126.0, 68.0], [125.0, 63.82926829268294], [124.0, 101.0], [135.0, 70.0], [134.0, 70.5], [133.0, 63.666666666666664], [132.0, 62.0], [131.0, 57.0], [130.0, 63.0], [129.0, 65.5], [128.0, 68.0], [143.0, 107.5], [142.0, 100.625], [141.0, 104.39534883720928], [140.0, 70.33333333333333], [139.0, 71.0], [138.0, 69.0], [137.0, 66.0], [136.0, 60.0], [151.0, 109.0], [150.0, 109.0], [149.0, 109.5], [148.0, 107.0], [147.0, 107.0], [146.0, 109.0], [145.0, 109.0], [144.0, 112.0], [159.0, 67.0], [158.0, 66.16666666666669], [157.0, 71.62500000000001], [156.0, 110.0], [155.0, 104.0], [154.0, 111.0], [153.0, 103.5], [152.0, 106.0], [167.0, 108.26530612244896], [166.0, 67.0], [165.0, 68.0], [164.0, 68.42857142857143], [163.0, 70.4], [162.0, 70.0], [161.0, 67.4927536231884], [160.0, 68.17142857142856], [175.0, 105.0], [174.0, 102.0], [173.0, 108.5], [172.0, 97.0], [171.0, 110.0], [170.0, 113.0], [169.0, 103.0], [168.0, 108.16101694915257], [183.0, 67.0], [182.0, 73.0], [181.0, 66.23076923076927], [180.0, 105.0], [179.0, 103.0], [178.0, 108.0], [177.0, 110.0], [176.0, 105.0], [191.0, 110.54014598540147], [190.0, 67.0], [189.0, 65.0], [188.0, 65.0], [187.0, 66.0], [186.0, 66.0], [185.0, 70.0], [184.0, 65.0], [199.0, 105.0], [198.0, 107.66666666666667], [197.0, 102.5], [196.0, 101.75], [195.0, 108.66666666666667], [194.0, 108.75], [193.0, 108.0], [192.0, 107.3157894736842], [207.0, 67.5], [206.0, 70.7425742574258], [205.0, 108.33333333333333], [204.0, 105.0], [203.0, 108.5], [202.0, 118.0], [201.0, 103.25], [200.0, 106.0], [215.0, 66.0], [214.0, 70.0], [213.0, 63.5], [212.0, 68.6], [211.0, 70.0], [209.0, 66.14285714285715], [208.0, 65.4], [223.0, 104.42857142857143], [222.0, 105.3076923076923], [221.0, 111.15517241379315], [220.0, 110.63043478260869], [219.0, 65.0], [217.0, 69.0], [216.0, 67.0], [231.0, 104.33333333333333], [230.0, 103.33333333333333], [229.0, 102.0], [228.0, 108.0], [227.0, 104.4], [226.0, 113.0], [225.0, 106.22222222222223], [224.0, 105.21052631578948], [239.0, 67.0], [238.0, 67.0], [237.0, 68.0], [236.0, 64.0], [235.0, 63.85714285714286], [234.0, 67.75], [233.0, 64.62790697674414], [232.0, 107.5], [247.0, 106.85714285714286], [246.0, 105.45614035087719], [245.0, 83.0], [244.0, 91.33333333333333], [243.0, 84.5], [242.0, 68.0], [241.0, 70.0], [240.0, 63.0], [255.0, 64.41176470588236], [254.0, 70.27586206896552], [253.0, 107.0], [252.0, 110.0], [251.0, 103.0], [250.0, 110.66666666666667], [249.0, 107.75], [248.0, 96.75], [270.0, 66.33333333333334], [271.0, 70.57142857142857], [269.0, 72.5], [268.0, 64.5], [267.0, 64.0], [266.0, 62.0], [265.0, 63.8], [264.0, 67.0], [263.0, 66.5], [257.0, 66.46913580246913], [256.0, 64.0], [259.0, 66.2], [258.0, 66.0], [262.0, 64.2], [261.0, 61.0], [260.0, 62.0], [286.0, 67.09374999999997], [287.0, 65.36363636363636], [285.0, 111.0], [284.0, 72.6], [283.0, 78.33333333333333], [282.0, 92.0], [281.0, 109.0], [280.0, 101.0], [279.0, 104.5], [273.0, 108.2], [272.0, 107.1566265060241], [275.0, 112.0], [274.0, 102.25], [278.0, 105.44444444444444], [277.0, 108.0], [276.0, 113.0], [302.0, 87.66666666666667], [303.0, 109.0], [301.0, 103.0], [300.0, 79.5], [299.0, 105.94422310756968], [298.0, 105.5], [297.0, 99.85714285714285], [296.0, 100.36111111111111], [295.0, 89.0], [289.0, 69.55555555555556], [288.0, 65.87309644670043], [291.0, 61.0], [290.0, 64.71428571428572], [294.0, 95.1], [293.0, 84.2], [292.0, 64.33333333333333], [307.0, 72.4], [313.0, 67.25], [317.0, 69.0], [314.0, 70.0], [311.0, 78.66666666666667], [310.0, 82.5], [309.0, 73.0], [308.0, 70.57142857142857], [306.0, 76.5], [305.0, 80.0], [304.0, 95.0], [323.0, 69.0], [336.0, 73.0], [365.0, 73.0], [392.0, 66.0], [390.0, 69.0], [411.0, 79.0], [431.0, 79.0], [430.0, 79.0], [425.0, 74.0], [424.0, 77.0], [418.0, 72.0], [416.0, 76.0], [435.0, 71.0], [433.0, 75.0], [432.0, 75.0], [463.0, 64.0], [460.0, 92.0], [459.0, 66.66666666666667], [457.0, 61.5], [449.0, 58.0], [475.0, 73.0], [470.0, 90.0], [469.0, 94.0], [465.0, 85.0], [464.0, 82.0], [493.0, 66.0], [492.0, 63.0], [488.0, 72.0], [483.0, 74.0], [481.0, 77.0], [510.0, 63.666666666666664], [507.0, 68.0], [502.0, 71.5], [498.0, 62.0], [518.0, 64.91666666666666], [541.0, 77.0], [537.0, 67.66666666666667], [536.0, 69.0], [534.0, 68.0], [522.0, 63.0], [512.0, 63.0], [517.0, 64.66666666666667], [516.0, 62.0], [515.0, 64.42857142857143], [514.0, 62.0], [573.0, 74.0], [574.0, 76.0], [571.0, 68.5], [570.0, 73.0], [568.0, 66.66666666666667], [551.0, 81.0], [549.0, 80.8], [548.0, 89.0], [547.0, 81.0], [545.0, 83.0], [567.0, 73.0], [566.0, 74.0], [563.0, 77.0], [559.0, 84.4], [557.0, 87.0], [554.0, 81.0], [553.0, 87.5], [595.0, 80.2], [606.0, 76.4], [604.0, 77.5], [602.0, 78.0], [598.0, 80.0], [597.0, 84.0], [596.0, 79.0], [594.0, 79.0], [589.0, 77.5], [580.0, 71.0], [583.0, 79.0], [637.0, 79.0], [639.0, 78.0], [634.0, 77.93333333333332], [633.0, 79.2], [632.0, 79.83333333333334], [614.0, 71.66666666666667], [613.0, 72.83333333333333], [612.0, 69.0], [609.0, 75.0], [631.0, 72.0], [630.0, 75.0], [629.0, 86.0], [623.0, 70.0], [621.0, 70.0], [620.0, 71.0], [617.0, 75.0], [616.0, 78.0], [658.0, 74.375], [668.0, 78.25], [671.0, 59.0], [657.0, 68.5], [667.0, 67.0], [666.0, 69.0], [665.0, 126.0], [643.0, 136.0], [662.0, 121.5], [661.0, 64.0], [660.0, 67.0], [691.0, 96.14285714285714], [703.0, 109.0], [688.0, 67.0], [699.0, 108.0], [697.0, 98.28571428571428], [696.0, 78.33333333333333], [686.0, 99.66666666666667], [677.0, 92.5], [673.0, 105.0], [679.0, 122.0], [678.0, 118.0], [685.0, 111.0], [683.0, 73.0], [682.0, 118.0], [680.0, 76.0], [694.0, 91.0], [693.0, 79.0], [692.0, 99.6], [690.0, 109.0], [689.0, 96.25], [732.0, 79.75], [735.0, 70.5], [721.0, 124.0], [720.0, 134.0], [723.0, 129.5], [722.0, 128.0], [725.0, 126.5], [724.0, 141.0], [734.0, 65.0], [733.0, 59.0], [731.0, 85.0], [730.0, 81.28571428571429], [729.0, 92.5], [728.0, 69.5], [719.0, 115.0], [705.0, 111.78947368421053], [704.0, 116.66666666666667], [708.0, 112.0], [707.0, 119.5], [711.0, 131.42857142857142], [710.0, 129.57847533632304], [718.0, 117.5], [717.0, 117.0], [716.0, 122.0], [715.0, 120.0], [714.0, 122.0], [713.0, 120.0], [712.0, 123.0], [727.0, 68.0], [726.0, 72.47970479704793], [764.0, 79.0], [767.0, 100.33333333333333], [753.0, 188.0], [752.0, 164.0], [755.0, 183.0], [754.0, 186.0], [757.0, 70.57777777777775], [756.0, 113.25], [766.0, 67.0], [765.0, 102.75], [763.0, 71.0], [762.0, 62.5], [761.0, 62.0], [760.0, 76.875], [751.0, 158.0], [737.0, 110.5], [736.0, 86.41666666666669], [739.0, 110.0], [738.0, 115.0], [741.0, 134.64000000000001], [740.0, 108.0], [743.0, 162.74999999999997], [742.0, 164.71428571428572], [749.0, 190.66666666666666], [748.0, 179.66666666666666], [747.0, 181.5], [746.0, 140.25], [745.0, 185.0], [744.0, 145.0], [759.0, 76.71428571428572], [758.0, 71.33333333333333], [796.0, 88.1], [799.0, 82.0], [785.0, 109.0], [784.0, 138.0], [787.0, 75.05714285714286], [786.0, 97.5], [789.0, 68.75], [788.0, 73.0909090909091], [798.0, 86.54545454545455], [797.0, 87.6], [795.0, 70.0], [794.0, 73.33333333333333], [793.0, 87.11111111111111], [792.0, 82.66666666666667], [783.0, 117.6], [769.0, 202.5], [768.0, 152.3023255813954], [771.0, 187.66666666666666], [770.0, 190.40000000000003], [773.0, 206.5], [772.0, 197.2857142857143], [775.0, 208.75], [774.0, 211.5], [782.0, 183.33333333333334], [781.0, 191.5], [780.0, 192.85714285714286], [779.0, 194.0], [778.0, 177.88888888888889], [777.0, 204.0], [776.0, 207.0], [791.0, 80.30000000000001], [790.0, 76.0], [828.0, 121.0], [831.0, 200.603896103896], [817.0, 80.0], [816.0, 73.16304347826089], [819.0, 83.99999999999999], [818.0, 81.86363636363637], [821.0, 130.5], [820.0, 102.27777777777777], [830.0, 122.0], [829.0, 119.0], [827.0, 129.0], [826.0, 130.0], [825.0, 81.58333333333334], [824.0, 107.16666666666667], [815.0, 126.0], [801.0, 102.33333333333333], [800.0, 110.66666666666667], [803.0, 176.16666666666666], [802.0, 184.05780346820808], [805.0, 141.0], [804.0, 173.20000000000002], [807.0, 132.0], [806.0, 139.0], [814.0, 130.0], [813.0, 130.0], [812.0, 140.5], [811.0, 136.0], [810.0, 131.0], [809.0, 143.0], [808.0, 132.6], [823.0, 121.0], [822.0, 109.4], [860.0, 194.1647058823529], [863.0, 140.75], [849.0, 205.0], [848.0, 189.0], [851.0, 180.0], [850.0, 190.0], [853.0, 161.0], [852.0, 193.0], [862.0, 144.33333333333334], [861.0, 157.0], [859.0, 276.05882352941177], [858.0, 184.0], [857.0, 116.0], [856.0, 132.5], [847.0, 200.0], [833.0, 132.0], [832.0, 124.0], [835.0, 143.0], [834.0, 137.0], [837.0, 135.0], [836.0, 130.0], [839.0, 134.0], [838.0, 131.0], [846.0, 144.5], [845.0, 97.40875912408758], [844.0, 125.0], [843.0, 129.0], [842.0, 126.0], [841.0, 128.0], [840.0, 131.0], [855.0, 184.0], [854.0, 182.0], [892.0, 279.0], [895.0, 279.0], [881.0, 230.0], [880.0, 230.0], [883.0, 298.0], [882.0, 223.0], [885.0, 360.0], [884.0, 297.0], [894.0, 347.0], [893.0, 349.0], [891.0, 348.0], [890.0, 350.0], [889.0, 355.0], [888.0, 338.0], [879.0, 235.5], [865.0, 131.0], [864.0, 137.2], [867.0, 133.5], [866.0, 132.0], [869.0, 126.0], [868.0, 129.0], [871.0, 134.33333333333334], [870.0, 133.0], [878.0, 224.5], [877.0, 232.5], [876.0, 235.0], [875.0, 234.0], [874.0, 210.0], [873.0, 145.7551020408163], [872.0, 141.0], [887.0, 344.0], [886.0, 352.0], [921.0, 330.0], [926.0, 162.0], [927.0, 156.0], [913.0, 329.0], [912.0, 339.0], [915.0, 332.0], [914.0, 338.0], [924.0, 165.0], [923.0, 182.5333333333334], [922.0, 313.0], [920.0, 333.0], [903.0, 326.25], [902.0, 272.5], [901.0, 309.0], [900.0, 282.3125], [899.0, 224.4], [898.0, 185.13793103448273], [897.0, 245.25], [896.0, 341.0], [911.0, 333.0], [910.0, 339.0], [909.0, 345.0], [908.0, 404.4642857142857], [907.0, 335.2], [906.0, 200.0], [905.0, 195.0], [904.0, 313.6666666666667], [919.0, 326.0], [918.0, 332.0], [917.0, 335.0], [916.0, 324.0], [932.0, 142.0], [931.0, 146.0], [930.0, 152.0], [929.0, 157.0], [928.0, 160.0], [1.0, 74.0]], "isOverall": false, "label": "查询抢购状态2", "isController": false}, {"data": [[458.63997736596417, 107.55863629933519]], "isOverall": false, "label": "查询抢购状态2-Aggregated", "isController": false}, {"data": [[318.0, 126.0], [319.0, 119.0], [317.0, 127.0], [316.0, 124.0], [315.0, 110.0], [314.0, 111.0], [313.0, 150.0], [312.0, 131.0], [311.0, 126.0], [334.0, 128.0], [335.0, 123.0], [333.0, 126.0], [332.0, 125.0], [331.0, 119.0], [330.0, 112.0], [329.0, 128.0], [328.0, 131.0], [327.0, 113.0], [321.0, 127.0], [320.0, 117.0], [323.0, 140.0], [322.0, 127.0], [326.0, 119.0], [325.0, 134.0], [324.0, 125.0], [350.0, 125.0], [351.0, 126.0], [349.0, 121.0], [348.0, 123.0], [347.0, 121.0], [346.0, 119.0], [345.0, 126.0], [344.0, 124.0], [343.0, 124.0], [337.0, 129.0], [336.0, 123.0], [339.0, 127.0], [338.0, 123.0], [342.0, 127.0], [341.0, 124.0], [340.0, 126.0], [366.0, 117.0], [367.0, 126.0], [364.0, 119.0], [354.0, 130.0], [353.0, 117.0], [352.0, 115.0], [363.0, 128.0], [362.0, 119.0], [361.0, 127.0], [360.0, 129.0], [359.0, 116.0], [358.0, 128.5], [356.0, 132.5], [382.0, 134.0], [383.0, 126.0], [381.0, 139.0], [380.0, 131.0], [379.0, 124.0], [378.0, 136.0], [376.0, 116.0], [375.0, 123.0], [368.0, 123.0], [370.0, 126.0], [369.0, 125.0], [374.0, 116.0], [373.0, 119.0], [372.0, 115.5], [398.0, 123.0], [399.0, 116.0], [397.0, 120.0], [396.0, 122.0], [395.0, 124.0], [394.0, 115.0], [393.0, 124.0], [391.0, 121.0], [385.0, 134.0], [384.0, 127.0], [387.0, 123.0], [386.0, 136.0], [389.0, 128.0], [388.0, 136.0], [414.0, 116.0], [415.0, 124.0], [413.0, 124.5], [402.0, 120.0], [401.0, 126.0], [411.0, 115.0], [410.0, 124.0], [409.0, 124.0], [408.0, 119.0], [407.0, 122.0], [405.0, 120.0], [404.0, 117.0], [430.0, 121.5], [431.0, 126.0], [428.0, 124.0], [419.0, 123.0], [417.0, 120.0], [416.0, 114.0], [427.0, 125.0], [425.0, 121.0], [424.0, 123.0], [423.0, 118.0], [422.0, 116.0], [421.0, 118.0], [420.0, 115.0], [435.0, 118.0], [447.0, 117.0], [446.0, 113.0], [434.0, 116.0], [433.0, 125.0], [432.0, 117.0], [442.0, 102.0], [441.0, 110.0], [440.0, 115.0], [439.0, 114.0], [438.0, 112.0], [437.0, 116.0], [436.0, 109.0], [462.0, 123.0], [463.0, 136.0], [461.0, 129.0], [460.0, 110.0], [459.0, 121.0], [458.0, 112.0], [457.0, 119.0], [456.0, 125.0], [455.0, 119.0], [449.0, 121.0], [448.0, 110.0], [451.0, 111.0], [450.0, 117.0], [454.0, 116.0], [453.0, 125.0], [452.0, 120.0], [477.0, 110.0], [478.0, 114.0], [476.0, 123.0], [467.0, 133.0], [466.0, 119.0], [465.0, 134.0], [464.0, 146.0], [475.0, 123.0], [474.0, 121.0], [473.0, 126.0], [472.0, 133.0], [471.0, 125.0], [470.0, 123.0], [469.0, 143.0], [468.0, 122.0], [494.0, 106.0], [495.0, 114.0], [493.0, 106.0], [492.0, 108.0], [491.0, 106.0], [490.0, 114.0], [489.0, 116.0], [488.0, 114.0], [487.0, 110.0], [481.0, 112.0], [480.0, 119.5], [483.0, 116.0], [482.0, 115.0], [486.0, 114.0], [485.0, 109.0], [484.0, 116.0], [510.0, 103.0], [511.0, 113.0], [509.0, 110.0], [499.0, 96.0], [498.0, 101.0], [496.0, 113.0], [507.0, 113.0], [506.0, 109.0], [505.0, 107.0], [504.0, 103.0], [503.0, 106.0], [502.0, 104.0], [501.0, 103.0], [500.0, 105.0], [540.0, 131.0], [543.0, 138.0], [529.0, 111.0], [528.0, 115.0], [531.0, 106.0], [530.0, 110.0], [533.0, 110.0], [532.0, 118.0], [542.0, 125.0], [541.0, 135.0], [539.0, 146.0], [538.0, 135.0], [537.0, 114.0], [536.0, 129.0], [527.0, 110.0], [513.0, 106.0], [512.0, 110.0], [515.0, 116.0], [514.0, 101.0], [517.0, 108.0], [516.0, 112.0], [519.0, 117.0], [518.0, 102.0], [525.0, 129.0], [524.0, 104.0], [523.0, 107.0], [522.0, 110.0], [520.0, 106.0], [535.0, 133.0], [534.0, 123.0], [572.0, 112.0], [575.0, 133.0], [561.0, 123.0], [560.0, 127.0], [563.0, 128.0], [562.0, 130.0], [565.0, 136.0], [564.0, 127.0], [574.0, 139.0], [573.0, 139.0], [571.0, 133.0], [570.0, 127.0], [569.0, 126.0], [568.0, 126.0], [559.0, 119.0], [545.0, 122.0], [544.0, 127.0], [547.0, 118.0], [546.0, 121.0], [549.0, 127.0], [548.0, 124.0], [551.0, 128.0], [550.0, 132.0], [558.0, 135.0], [557.0, 132.0], [556.0, 121.0], [555.0, 129.0], [554.0, 136.0], [553.0, 124.0], [552.0, 137.0], [567.0, 128.0], [566.0, 128.0], [600.0, 117.0], [604.0, 115.0], [607.0, 112.0], [594.0, 130.5], [592.0, 124.0], [596.0, 127.0], [595.0, 131.0], [606.0, 110.0], [605.0, 124.0], [603.0, 121.0], [602.0, 123.0], [601.0, 122.5], [591.0, 131.0], [576.0, 127.0], [578.0, 131.0], [577.0, 129.0], [581.0, 129.5], [579.0, 135.0], [583.0, 133.0], [582.0, 136.0], [590.0, 126.0], [589.0, 133.0], [588.0, 131.0], [587.0, 121.0], [586.0, 133.0], [585.0, 134.0], [584.0, 136.0], [598.0, 127.0], [597.0, 125.0], [633.0, 113.0], [638.0, 137.0], [639.0, 146.0], [625.0, 135.0], [624.0, 140.0], [627.0, 139.0], [626.0, 131.0], [629.0, 126.0], [628.0, 131.0], [637.0, 114.0], [636.0, 150.0], [635.0, 124.0], [632.0, 121.0], [615.0, 116.0], [614.0, 114.0], [613.0, 124.0], [612.0, 130.0], [611.0, 111.0], [610.0, 115.0], [609.0, 122.0], [608.0, 117.0], [623.0, 124.0], [622.0, 131.0], [621.0, 136.0], [620.0, 131.0], [619.0, 140.0], [618.0, 130.0], [617.0, 117.0], [616.0, 136.0], [631.0, 125.0], [630.0, 125.0], [664.0, 131.0], [669.0, 118.0], [670.0, 101.0], [656.0, 120.0], [659.0, 120.0], [657.0, 112.0], [668.0, 120.0], [666.0, 124.0], [665.0, 107.0], [655.0, 121.0], [641.0, 135.0], [640.0, 141.0], [643.0, 138.0], [642.0, 138.0], [645.0, 135.0], [644.0, 136.0], [647.0, 132.0], [646.0, 133.0], [654.0, 122.0], [653.0, 125.0], [652.0, 126.0], [651.0, 126.0], [650.0, 128.0], [649.0, 130.0], [648.0, 130.0], [663.0, 128.0], [662.0, 105.0], [661.0, 108.0], [660.0, 114.0], [700.0, 66.18181818181819], [703.0, 68.18518518518518], [689.0, 109.33333333333333], [688.0, 107.0], [691.0, 106.5], [690.0, 100.0], [693.0, 109.0], [692.0, 111.0], [702.0, 67.0], [701.0, 64.25], [699.0, 66.16000000000003], [698.0, 68.5], [697.0, 79.5], [696.0, 116.0], [687.0, 109.0], [673.0, 118.0], [672.0, 109.0], [675.0, 117.0], [674.0, 120.0], [677.0, 116.0], [676.0, 117.0], [679.0, 119.0], [678.0, 123.0], [686.0, 108.66666666666667], [685.0, 114.0], [684.0, 108.0], [683.0, 120.0], [682.0, 114.0], [681.0, 111.0], [680.0, 113.0], [695.0, 114.0], [694.0, 106.5], [728.0, 107.0], [734.0, 104.0], [735.0, 96.0], [720.0, 66.0], [722.0, 86.0], [721.0, 78.0], [732.0, 109.28571428571429], [730.0, 113.2], [729.0, 109.57142857142857], [718.0, 67.0], [705.0, 66.86046511627906], [704.0, 68.25], [707.0, 72.0], [706.0, 85.0], [709.0, 79.66666666666667], [708.0, 80.75], [711.0, 77.5], [710.0, 78.97222222222219], [717.0, 63.5], [715.0, 65.0], [712.0, 64.0], [727.0, 109.0], [726.0, 114.89908256880729], [725.0, 85.1111111111111], [723.0, 80.75], [766.0, 61.0], [755.0, 100.0], [767.0, 69.56249999999999], [752.0, 106.8], [754.0, 185.0], [753.0, 99.0], [765.0, 99.0], [761.0, 113.0], [760.0, 95.33333333333333], [743.0, 86.92857142857142], [742.0, 86.85714285714285], [741.0, 78.38271604938271], [740.0, 70.14285714285714], [738.0, 97.66666666666667], [737.0, 99.25], [736.0, 111.60000000000001], [747.0, 100.0], [746.0, 94.5], [744.0, 90.25], [758.0, 117.5], [757.0, 123.36211031175063], [756.0, 179.26923076923075], [796.0, 103.66666666666667], [788.0, 128.0], [798.0, 73.5], [785.0, 190.23529411764707], [784.0, 184.0681818181818], [793.0, 126.66666666666667], [792.0, 124.8], [783.0, 170.75000000000003], [768.0, 106.01991150442481], [771.0, 122.33333333333333], [770.0, 100.31578947368422], [773.0, 144.0], [772.0, 132.0], [775.0, 134.0], [774.0, 129.0], [782.0, 134.39999999999998], [780.0, 95.83333333333333], [779.0, 91.0], [778.0, 103.60000000000001], [776.0, 123.0], [791.0, 121.6], [790.0, 125.66666666666667], [789.0, 127.0], [787.0, 131.06874999999997], [786.0, 180.0], [825.0, 82.0], [830.0, 77.6], [831.0, 187.7658674188998], [829.0, 75.0], [828.0, 78.0], [827.0, 79.0], [815.0, 233.45833333333334], [800.0, 74.0], [802.0, 130.68296795952782], [801.0, 74.0], [804.0, 220.5], [803.0, 116.0], [807.0, 228.75], [805.0, 230.6], [813.0, 219.5], [812.0, 225.66666666666663], [811.0, 236.0], [809.0, 224.33333333333334], [808.0, 225.33333333333334], [820.0, 68.0], [818.0, 117.4], [817.0, 119.0], [816.0, 127.32982456140358], [856.0, 83.66666666666667], [860.0, 235.68235294117648], [863.0, 257.3333333333333], [862.0, 262.6666666666667], [861.0, 263.0], [859.0, 231.8179104477612], [858.0, 93.5], [857.0, 76.0], [845.0, 128.3543307086613], [832.0, 245.0], [834.0, 243.33333333333334], [833.0, 242.66666666666666], [837.0, 238.0], [835.0, 242.0], [839.0, 233.0], [838.0, 235.5], [844.0, 226.0], [843.0, 232.33333333333334], [842.0, 235.0], [841.0, 228.0], [852.0, 83.0], [849.0, 90.0], [892.0, 345.6666666666667], [884.0, 278.1843003412974], [895.0, 237.0], [881.0, 116.0], [883.0, 166.14814814814812], [882.0, 130.9], [890.0, 351.3333333333333], [889.0, 351.0], [888.0, 275.5], [871.0, 240.14285714285714], [870.0, 243.5], [869.0, 243.75], [868.0, 240.0], [866.0, 247.33333333333331], [864.0, 255.0], [879.0, 105.0], [878.0, 106.0], [877.0, 107.5], [876.0, 101.0], [874.0, 103.5], [873.0, 125.95571428571424], [872.0, 247.5], [887.0, 302.4], [886.0, 336.46153846153845], [885.0, 304.9230769230769], [921.0, 346.2], [926.0, 158.0], [927.0, 183.82608695652172], [914.0, 326.5], [913.0, 338.0], [924.0, 175.5], [923.0, 209.90000000000018], [922.0, 295.6666666666666], [920.0, 321.0], [903.0, 241.0], [902.0, 236.0], [901.0, 244.0], [900.0, 220.1176470588235], [899.0, 229.85714285714286], [898.0, 242.13131313131316], [897.0, 262.75], [896.0, 248.66666666666666], [911.0, 275.0], [910.0, 269.0], [909.0, 213.5], [908.0, 342.61538461538476], [907.0, 279.61904761904765], [905.0, 196.0], [904.0, 267.5714285714286], [919.0, 318.0], [918.0, 362.0], [952.0, 726.5], [945.0, 581.0], [955.0, 711.0], [954.0, 719.2222222222222], [953.0, 734.4615384615385], [951.0, 447.0], [950.0, 676.0], [949.0, 680.0], [944.0, 610.4], [943.0, 554.0], [929.0, 181.0769230769231], [928.0, 183.23076923076923], [931.0, 169.63636363636365], [930.0, 194.13333333333333], [933.0, 473.0], [932.0, 180.4555288461539], [935.0, 535.4482758620691], [934.0, 514.0909090909091], [942.0, 593.5], [941.0, 601.1666666666666], [940.0, 605.0], [939.0, 602.6666666666666], [938.0, 481.6666666666667], [937.0, 583.2222222222222], [936.0, 600.125], [961.0, 616.5]], "isOverall": false, "label": "查询抢购状态1", "isController": false}, {"data": [[832.483403895009, 182.62836579170204]], "isOverall": false, "label": "查询抢购状态1-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 966.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3165.9, "minX": 1.59548424E12, "maxY": 195058.55, "series": [{"data": [[1.59548424E12, 195058.55], [1.5954843E12, 5048.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.59548424E12, 122308.9], [1.5954843E12, 3165.9]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5954843E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 86.83236994219656, "minX": 1.59548424E12, "maxY": 902.4679999999994, "series": [{"data": [[1.59548424E12, 902.4679999999994]], "isOverall": false, "label": "抢购下单", "isController": false}, {"data": [[1.59548424E12, 152.8315018315019]], "isOverall": false, "label": "支付", "isController": false}, {"data": [[1.59548424E12, 109.20091603053422], [1.5954843E12, 86.83236994219656]], "isOverall": false, "label": "查询抢购状态2", "isController": false}, {"data": [[1.59548424E12, 182.62836579170204]], "isOverall": false, "label": "查询抢购状态1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5954843E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 86.82080924855495, "minX": 1.59548424E12, "maxY": 902.4380000000006, "series": [{"data": [[1.59548424E12, 902.4380000000006]], "isOverall": false, "label": "抢购下单", "isController": false}, {"data": [[1.59548424E12, 152.82051282051287]], "isOverall": false, "label": "支付", "isController": false}, {"data": [[1.59548424E12, 109.19648854961807], [1.5954843E12, 86.82080924855495]], "isOverall": false, "label": "查询抢购状态2", "isController": false}, {"data": [[1.59548424E12, 182.62286198137278]], "isOverall": false, "label": "查询抢购状态1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5954843E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 7.4322344322344245, "minX": 1.59548424E12, "maxY": 48.96100000000003, "series": [{"data": [[1.59548424E12, 48.96100000000003]], "isOverall": false, "label": "抢购下单", "isController": false}, {"data": [[1.59548424E12, 7.4322344322344245]], "isOverall": false, "label": "支付", "isController": false}, {"data": [[1.59548424E12, 29.126564885496276], [1.5954843E12, 19.69749518304432]], "isOverall": false, "label": "查询抢购状态2", "isController": false}, {"data": [[1.59548424E12, 45.85774767146497]], "isOverall": false, "label": "查询抢购状态1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5954843E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 56.0, "minX": 1.59548424E12, "maxY": 1311.0, "series": [{"data": [[1.59548424E12, 1311.0], [1.5954843E12, 122.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.59548424E12, 56.0], [1.5954843E12, 56.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.59548424E12, 1077.0], [1.5954843E12, 1063.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.59548424E12, 1189.0], [1.5954843E12, 1189.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.59548424E12, 1141.0], [1.5954843E12, 1138.4499999999998]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5954843E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 112.0, "minX": 1000.0, "maxY": 1095.0, "series": [{"data": [[9000.0, 192.5], [5000.0, 727.0], [10000.0, 311.0], [3000.0, 730.5], [6000.0, 892.0], [13000.0, 120.0], [7000.0, 1095.0], [1000.0, 155.0], [4000.0, 696.0], [2000.0, 215.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[9000.0, 274.0], [10000.0, 278.0], [11000.0, 172.0], [3000.0, 136.5], [12000.0, 217.5], [13000.0, 237.0], [1000.0, 112.0], [4000.0, 307.0], [5000.0, 319.0], [6000.0, 184.0], [7000.0, 140.0], [2000.0, 135.0], [8000.0, 215.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 13000.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 112.0, "minX": 1000.0, "maxY": 1095.0, "series": [{"data": [[9000.0, 192.5], [5000.0, 727.0], [10000.0, 311.0], [3000.0, 730.5], [6000.0, 892.0], [13000.0, 120.0], [7000.0, 1095.0], [1000.0, 155.0], [4000.0, 695.0], [2000.0, 215.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[9000.0, 274.0], [10000.0, 278.0], [11000.0, 172.0], [3000.0, 136.5], [12000.0, 217.5], [13000.0, 237.0], [1000.0, 112.0], [4000.0, 307.0], [5000.0, 319.0], [6000.0, 184.0], [7000.0, 140.0], [2000.0, 135.0], [8000.0, 215.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 13000.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 8.466666666666667, "minX": 1.59548424E12, "maxY": 331.95, "series": [{"data": [[1.59548424E12, 331.95], [1.5954843E12, 8.466666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5954843E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 8.65, "minX": 1.59548424E12, "maxY": 331.76666666666665, "series": [{"data": [[1.59548424E12, 331.76666666666665], [1.5954843E12, 8.65]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5954843E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.1333333333333333, "minX": 1.59548424E12, "maxY": 187.73333333333332, "series": [{"data": [[1.59548424E12, 1.1333333333333333]], "isOverall": false, "label": "抢购下单-failure", "isController": false}, {"data": [[1.59548424E12, 7.416666666666667], [1.5954843E12, 1.6833333333333333]], "isOverall": false, "label": "查询抢购状态2-success", "isController": false}, {"data": [[1.59548424E12, 9.1]], "isOverall": false, "label": "支付-success", "isController": false}, {"data": [[1.59548424E12, 187.73333333333332]], "isOverall": false, "label": "查询抢购状态1-failure", "isController": false}, {"data": [[1.59548424E12, 15.533333333333333]], "isOverall": false, "label": "抢购下单-success", "isController": false}, {"data": [[1.59548424E12, 101.75], [1.5954843E12, 6.966666666666667]], "isOverall": false, "label": "查询抢购状态2-failure", "isController": false}, {"data": [[1.59548424E12, 9.1]], "isOverall": false, "label": "查询抢购状态1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5954843E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.6833333333333333, "minX": 1.59548424E12, "maxY": 290.6166666666667, "series": [{"data": [[1.59548424E12, 41.15], [1.5954843E12, 1.6833333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.59548424E12, 290.6166666666667], [1.5954843E12, 6.966666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5954843E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

